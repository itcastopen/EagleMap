{"version":3,"file":"static/js/112.85bb19ce.chunk.js","mappings":"uZAmEO,SAASA,EAAWC,GACzB,OAAOC,IAAAA,QAAiBD,GCnDnB,SAASE,EAAaC,GAC3B,OAAOJ,EAAyB,CAC9BK,OAAQ,OACRC,IAAK,aACLF,KAAAA,EACAG,OAAOH,IAKJ,SAASI,IACd,OAAOR,EAAyB,CAC9BK,OAAQ,MACRC,IAAK,gBAKF,SAASG,EAAeL,GAC7B,OAAOJ,EAAyB,CAC9BK,OAAQ,MACRC,IAAK,oBACLF,KAAAA,EACAG,OAAOH,IAKJ,SAASM,EAAaN,GAC3B,OAAOJ,EAAyB,CAC9BK,OAAQ,MACRC,IAAK,aACLF,KAAAA,EACAG,OAAOH,IAIJ,SAASO,EAAeP,GAC7B,OAAOJ,EAAyB,CAC9BK,OAAQ,MACRC,IAAK,mBACLF,KAAAA,EACAG,OAAOH,IAIJ,SAASQ,EAAeR,GAC7B,OAAOJ,EAAyB,CAC9BK,OAAQ,SACRC,IAAI,cAAD,OAAgBF,EAAKS,IACxBT,KAAAA,EACAG,OAAOH,IAKJ,SAASU,EAAaV,GAC3B,OAAOJ,EAAyB,CAC9BK,OAAQ,MACRC,IAAK,aACLF,KAAAA,EACAG,OAAOH,IAaJ,SAASW,EAAeX,GAC7B,OAAOJ,EAAyB,CAC9BK,OAAQ,SACRC,IAAI,cAAD,OAAgBF,EAAKY,SACxBZ,KAAAA,EACAG,OAAOH,IAIJ,SAASa,EAAYb,GAC1B,OAAOJ,EAAyB,CAC9BK,OAAQ,MACRC,IAAK,gBACLF,KAAAA,EACAG,OAAOH,IAKJ,SAASc,EAAoBd,GAClC,OAAOJ,EAAyB,CAC9BK,OAAQ,SACRC,IAAI,iBAAD,OAAmBF,EAAKS,IAC3BT,KAAAA,EACAG,OAAOH,IDxGVF,IAAAA,SAAAA,QAAiC,CAChC,eAAgB,kCAIlBA,IAAAA,SAAAA,QAAyB,GAGzBA,IAAAA,aAAAA,QAAAA,KACE,SAACiB,GACC,IAAMC,GAAQC,EAAAA,EAAAA,MAMd,OAHID,IACDD,EAAOG,QAAgBC,cAAgBH,GAEnCD,KAET,SAACK,GAAD,OAAuBC,QAAQC,OAAOF,MAKxCtB,IAAAA,aAAAA,SAAAA,KACE,SAACyB,GACC,OAAKA,EAASvB,KAIU,MAApBuB,EAASC,OACJD,EAASvB,MAGM,MAApBuB,EAASC,QAAyC,MAAvBD,EAASvB,KAAKyB,QAC3CC,EAAAA,EAAAA,MACAC,OAAOC,SAASC,KAAO,UAIzBC,EAAAA,GAAAA,MAAoBP,EAASvB,KAAK+B,KAE3BV,QAAQC,OAAO,IAAIU,MAAMT,EAASvB,KAAK+B,OAfrCV,QAAQY,QAAQV,MAiB3B,SAACH,GAGC,GAFAU,EAAAA,GAAAA,MAAoBV,EAAMc,SAEX,MADAd,EAAMG,SAAUC,OAK7B,OAAOH,QAAQC,OAAOF,IAHtBM,EAAAA,EAAAA,MACAC,OAAOC,SAASC,KAAO,a,2FEf7B,SAASM,EAAQC,GACf,IAAQpC,EAASoC,EAATpC,KACR,OAAOA,GACL,iBAAKqC,UAAU,UAAf,WACE,iBAAKA,UAAU,QAAf,WAAuB,0BAAOrC,EAAKsC,aAAnC,IAAuDtC,EAAKuC,QAAU,kBAAMF,UAAU,MAAhB,WAAsB,kBAAtB,mBAA6C,kBAAMA,UAAU,KAAhB,WAAqB,kBAArB,sBACnH,gBAAKA,UAAU,OAAf,UACE,SAAC,KAAD,CACErC,KAAMA,EAAKwC,QACXC,QAAS,CACP,CACEC,MAAO,OACPL,UAAW,MACXM,UAAU,EACVC,OAAQ,KACRC,KALF,YAKiB,IAARC,EAAO,EAAPA,IACN,OAAOA,EAAIrC,GAAKqC,EAAIrC,GAAK,MAE1BsC,MAAO,kBAET,CACEL,MAAO,OACPL,UAAW,OACXM,UAAU,EACVC,OAAQ,OACRG,MAAO,4BAET,CACEL,MAAO,OACPL,UAAW,QACXM,UAAU,EACVC,OAAQ,KACRG,MAAO,MAET,CACEL,MAAO,OACPL,UAAW,QACXM,UAAU,EACVC,OAAQ,KACRG,MAAO,KACPF,KANF,YAMiB,IAARC,EAAO,EAAPA,IACL,OAAOA,EAAIE,GAAKF,EAAIE,GAAK,OAG7B,CACEN,MAAO,OACPL,UAAW,QACXM,UAAU,EACVC,OAAQ,OACRG,MAAO,iBAGXE,OAAO,QACPC,cAAc,MACdC,UAAQ,EACRC,OAAK,SAIT,KAGN,UAxFA,SAAmBhB,GACjB,OAAiCiB,EAAAA,EAAAA,UAAS,IAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,YAKRpD,EAAAA,EAAAA,MAAeqD,MAAK,SAACC,GACnB,IAGO,EAHC1D,EAAS0D,EAAT1D,KACS,IAAb0D,EAAIjC,KACN8B,EAAYvD,GAEZ8B,EAAAA,GAAAA,MAAA,UAAoB4B,EAAI3B,WAAxB,QAA+B,uCARnC,KAcA,gBAAKM,UAAU,sBAAf,SACGiB,EAASK,KAAI,SAAC3D,EAAW4D,GACxB,OAAO,SAACzB,EAAD,CAASnC,KAAMA,GAAW4D,OAFI","sources":["utils/request.ts","api/api.ts","pages/systemSet/index.tsx"],"sourcesContent":["import axios, { AxiosRequestConfig, AxiosError, AxiosResponse } from 'axios';\nimport { MessagePlugin } from 'tdesign-react';\nimport { getToken, removeToken } from '../utils/cookie';\n\ninterface ResponseData<T> {\n  code: number;\n  data: T;\n  msg: string;\n}\n\n// 指定 axios 请求类型\n(axios.defaults.headers as any) = {\n  'Content-Type': 'application/json;charset=utf-8',\n};\n\n// 指定请求地址\naxios.defaults.baseURL = '' // : 'https://mock.boxuegu.com/mock/2894/';\n\n// 添加请求拦截器\naxios.interceptors.request.use(\n  (config: AxiosRequestConfig ) => {\n    const token = getToken();\n    // 获取用户token，用于校验\n    /* eslint-disable  no-param-reassign */\n    if (token) {\n      (config.headers as any).Authorization = token;\n    }\n    return config;\n  },\n  (error: AxiosError) => Promise.reject(error),\n);\n\n// 添加响应拦截器，拦截登录过期或者没有权限\n\naxios.interceptors.response.use(\n  (response: AxiosResponse<ResponseData<any>>) => {\n    if (!response.data) {\n      return Promise.resolve(response);\n    }\n    // 请求成功\n    if (response.status === 200) {\n      return response.data as any;\n    }\n    // token 超时 失效\n    if (response.status === 401 || response.data.code === 401) {\n      removeToken()\n      window.location.href = '/login'\n    }\n\n    // 请求成功，状态不为成功时\n    MessagePlugin.error(response.data.msg);\n\n    return Promise.reject(new Error(response.data.msg));\n  },\n  (error: AxiosError) => {\n    MessagePlugin.error(error.message);\n    const status = error.response!.status\n    if (status === 401) {\n      removeToken()\n      window.location.href = '/login'\n    } else {\n      return Promise.reject(error);\n    }\n  },\n);\n\n// 统一发起请求的函数\nexport function request<T>(options: AxiosRequestConfig) {\n  return axios.request<T>(options);\n}\n","import { request } from '../utils/request';\n// import { UserState } from '../store/module/user';\n\nexport interface UserLoginDataRq  {\n  code: number,\n  msg: string,\n  data: {\n    token: string\n  }\n}\n\nexport interface UserLoginData {\n  userName: string;\n  password: string;\n}\n\n// 登录接口\nexport function apiUserLogin(data: UserLoginData) {\n  return request<UserLoginDataRq>({\n    method: 'POST',\n    url: '/sys/login',\n    data,\n    params:data,\n  });\n}\n\n// 系统配置\nexport function apiSysConfig() {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/config',\n  });\n}\n\n// 轨迹服务管理\nexport function apiTraceServer(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/trace/server',\n    data,\n    params:data,\n  });\n}\n\n// 轨迹列表\nexport function apiTraceList(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/trace',\n    data,\n    params:data,\n  });\n}\n// 轨迹缩略图\nexport function apiTraceImgUrl(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/trace/image',\n    data,\n    params:data,\n  });\n}\n// 删除轨迹\nexport function apiDeleteTrace(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/trace/${data.id}`,\n    data,\n    params:data,\n  });\n}\n\n// 电子围栏列表\nexport function apiFenceList(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/fence',\n    data,\n    params:data,\n  });\n}\n\n// 电子围栏列表详情\nexport function apiFenceDetails(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: `/sys/fence/${data.fenceId}`,\n    data,\n  });\n}\n// 删除电子围栏\nexport function apiDeleteFence(data:any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/fence/${data.fenceId}`,\n    data,\n    params:data\n  });\n}\n// 终端列表\nexport function apiTerminal(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/terminal',\n    data,\n    params:data,\n  });\n}\n\n// 删除终端\nexport function apiDeleteTerminalld(data:any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/terminal/${data.id}`,\n    data,\n    params:data\n  });\n}","import { useEffect, useState } from \"react\";\nimport { Table, MessagePlugin } from \"tdesign-react\";\nimport { apiSysConfig } from \"../../api/api\"\n\nexport type systemlistType = {\n  id: string | number;\n  name: string;\n  ak: string;\n  sk: string;\n  type: string;\n}[];\n\nexport type itemListType = {\n  serverName: string;\n  servers: systemlistType;\n}[];\n\nfunction SystemSet(props: any) {\n  const [itemList, setItemList]  = useState([])\n\n  useEffect(()=> {\n    getInteData()\n  },[])\n\n  function getInteData(){\n    apiSysConfig().then((res:any) => {\n      const { data } = res\n      if (res.code === 0) {\n        setItemList(data)\n      } else {\n        MessagePlugin.error(res.msg ?? \"请求出错！\");\n      }\n    })\n  }\n\n  return (\n    <div className=\"systemSet container\" key=\"sts\">\n      {itemList.map((data: any, index: number) => {\n        return <MapList data={data} key={index}></MapList>;\n      })}\n    </div>\n  );\n}\n\nfunction MapList(props: any) {\n  const { data } = props;\n  return data ? (\n    <div className=\"mapList\">\n      <div className=\"title\"><span>{data.serverName}</span> {data.enable ? (<span className=\"off\"><em></em>开启</span>) : (<span className=\"on\"><em></em>关闭</span>)}</div>\n      <div className=\"cont\">\n        <Table \n          data={data.servers} \n          columns={[\n            {\n              align: 'left',\n              className: 'row',\n              ellipsis: true,\n              colKey: 'id',\n              cell({ row }) {\n               return row.id ? row.id : '--'; \n              },\n              title: '应用ID',\n            },\n            {\n              align: 'left',\n              className: 'test',\n              ellipsis: true,\n              colKey: 'name',\n              title: '应用名称',\n            },\n            {\n              align: 'left',\n              className: 'test4',\n              ellipsis: true,\n              colKey: 'ak',\n              title: 'AK',\n            },\n            {\n              align: 'left',\n              className: 'test4',\n              ellipsis: true,\n              colKey: 'sk',\n              title: 'SK',\n              cell({ row }) {\n                return row.sk ? row.sk : '--'; \n               },\n            },\n            {\n              align: 'left',\n              className: 'test4',\n              ellipsis: true,\n              colKey: 'type',\n              title: '类型',\n            },\n          ]} \n          rowKey=\"index\" \n          verticalAlign=\"top\"\n          bordered\n          hover\n        ></Table>\n      </div>\n    </div>\n  ) : null;\n}\n\nexport default SystemSet;\n"],"names":["request","options","axios","apiUserLogin","data","method","url","params","apiSysConfig","apiTraceServer","apiTraceList","apiTraceImgUrl","apiDeleteTrace","id","apiFenceList","apiDeleteFence","fenceId","apiTerminal","apiDeleteTerminalld","config","token","getToken","headers","Authorization","error","Promise","reject","response","status","code","removeToken","window","location","href","MessagePlugin","msg","Error","resolve","message","MapList","props","className","serverName","enable","servers","columns","align","ellipsis","colKey","cell","row","title","sk","rowKey","verticalAlign","bordered","hover","useState","itemList","setItemList","useEffect","then","res","map","index"],"sourceRoot":""}
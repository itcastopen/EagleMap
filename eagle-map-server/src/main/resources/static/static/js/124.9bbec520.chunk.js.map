{"version":3,"file":"static/js/124.9bbec520.chunk.js","mappings":"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","sources":["../node_modules/tdesign-icons-react/src/components/search.tsx","../node_modules/tdesign-react/src/dialog/RenderDialog.tsx","../node_modules/tdesign-react/src/_util/useSetState.ts","../node_modules/tdesign-react/src/dialog/Dialog.tsx","../node_modules/tdesign-react/src/dialog/index.tsx"],"sourcesContent":["// This file is generated automatically by `useTemplate.ts`. DO NOT EDIT IT.\n\nimport { createElement, forwardRef, Ref } from 'react';\nimport { IconBase, IconProps } from '../icon';\n\nimport '../style/css';\n\nconst element = {\"tag\":\"svg\",\"attrs\":{\"fill\":\"none\",\"viewBox\":\"0 0 16 16\",\"width\":\"1em\",\"height\":\"1em\"},\"children\":[{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M9.51 10.22a4.76 4.76 0 11.7-.7l3.54 3.52-.7.71-3.54-3.53zm.77-3.7a3.76 3.76 0 10-7.53 0 3.76 3.76 0 007.53 0z\",\"fillOpacity\":0.9}}]};\n\nconst SearchIcon = forwardRef<SVGElement, IconProps>((props: IconProps, ref: Ref<SVGElement>) => createElement(\n  IconBase,\n  {\n    ...props,\n    id: 'search',\n    ref,\n    icon: element,\n  },\n));\n\nSearchIcon.displayName = 'SearchIcon';\n\nexport default SearchIcon;\n","import React, { useRef, CSSProperties, useEffect } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport classnames from 'classnames';\nimport Portal from '../common/Portal';\nimport noop from '../_util/noop';\nimport useLayoutEffect from '../_util/useLayoutEffect';\nimport { DialogProps } from './Dialog';\n\nenum KeyCode {\n  ESC = 27,\n}\n\nexport interface RenderDialogProps extends DialogProps {\n  prefixCls?: string;\n  classPrefix: string;\n}\n\nconst transitionTime = 300;\nlet mousePosition: { x: number; y: number } | null;\nconst getClickPosition = (e: MouseEvent) => {\n  mousePosition = {\n    x: e.clientX,\n    y: e.clientY,\n  };\n  setTimeout(() => {\n    mousePosition = null;\n  }, 100);\n};\nif (typeof window !== 'undefined' && window.document && window.document.documentElement) {\n  document.documentElement.addEventListener('click', getClickPosition, true);\n}\nconst RenderDialog: React.FC<RenderDialogProps> = (props) => {\n  const {\n    prefixCls,\n    attach,\n    visible,\n    mode,\n    zIndex,\n    showOverlay,\n    onEscKeydown = noop,\n    onClosed = noop,\n    onClose = noop,\n    onCloseBtnClick = noop,\n    onOverlayClick = noop,\n    preventScrollThrough,\n    closeBtn,\n  } = props;\n  const wrap = useRef<HTMLDivElement>();\n  const dialog = useRef<HTMLDivElement>();\n  const maskRef = useRef<HTMLDivElement>();\n  const bodyOverflow = useRef<string>();\n  const bodyCssTextRef = useRef<string>();\n  const isModal = mode === 'modal';\n  const canDraggable = props.draggable && mode === 'modeless';\n\n  useEffect(() => {\n    bodyOverflow.current = document.body.style.overflow;\n    bodyCssTextRef.current = document.body.style.cssText;\n  }, []);\n\n  useLayoutEffect(() => {\n    if (visible) {\n      if (isModal && bodyOverflow.current !== 'hidden' && preventScrollThrough) {\n        const scrollWidth = window.innerWidth - document.body.offsetWidth;\n        // 减少回流\n        if (bodyCssTextRef.current === '') {\n          let bodyCssText = 'overflow: hidden;';\n          if (scrollWidth > 0) {\n            bodyCssText += `position: relative;width: calc(100% - ${scrollWidth}px);`;\n          }\n          document.body.style.cssText = bodyCssText;\n        } else {\n          if (scrollWidth > 0) {\n            document.body.style.width = `calc(100% - ${scrollWidth}px)`;\n            document.body.style.position = 'relative';\n          }\n          document.body.style.overflow = 'hidden';\n        }\n      }\n      if (wrap.current) {\n        wrap.current.focus();\n      }\n    } else if (isModal) {\n      document.body.style.cssText = bodyCssTextRef.current;\n    }\n  }, [preventScrollThrough, attach, visible, mode, isModal]);\n\n  useEffect(() => {\n    if (visible) {\n      if (mousePosition && dialog.current) {\n        dialog.current.style.transformOrigin = `${mousePosition.x - dialog.current.offsetLeft}px ${\n          mousePosition.y - dialog.current.offsetTop\n        }px`;\n      }\n    }\n  }, [visible]);\n\n  const onAnimateLeave = () => {\n    if (wrap.current) {\n      wrap.current.style.display = 'none';\n    }\n    if (isModal && preventScrollThrough) {\n      // 还原body的滚动条\n      isModal && (document.body.style.overflow = bodyOverflow.current);\n    }\n    if (!isModal) {\n      const { style } = dialog.current;\n      style.left = '50%';\n      style.top = '50%';\n    }\n    onClosed && onClosed();\n  };\n\n  const onMaskClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.target === e.currentTarget) {\n      onOverlayClick({ e });\n      onClose({ e, trigger: 'overlay' });\n    }\n  };\n\n  const handleCloseBtnClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    onCloseBtnClick({ e });\n    onClose({ e, trigger: 'close-btn' });\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\n    if (+e.code === KeyCode.ESC || e.keyCode === KeyCode.ESC) {\n      e.stopPropagation();\n      onEscKeydown({ e });\n      onClose({ e, trigger: 'esc' });\n    }\n  };\n\n  const renderDialog = (classNames) => {\n    const dest: any = {};\n    if (props.width !== undefined) {\n      dest.width = props.width;\n    }\n\n    const footer = props.footer ? <div className={`${prefixCls}__footer`}>{props.footer}</div> : null;\n\n    const header = <div className={`${prefixCls}__header`}>{props.header}</div>;\n\n    const body = <div className={`${prefixCls}__body`}>{props.body || props.children}</div>;\n\n    const closer = closeBtn && (\n      <span onClick={handleCloseBtnClick} className={`${prefixCls}__close`}>\n        {closeBtn}\n      </span>\n    );\n\n    const style = { ...dest, ...props.style };\n    let dialogOffset = { x: 0, y: 0 };\n    const onDialogMove = (e: MouseEvent) => {\n      const { style, offsetWidth, offsetHeight, clientHeight, clientWidth } = dialog.current;\n      const halfHeight = clientHeight / 2;\n      const halfWidth = clientWidth / 2;\n\n      let diffX = e.clientX - dialogOffset.x;\n      let diffY = e.clientY - dialogOffset.y;\n\n      if (diffX < halfWidth) {\n        diffX = halfWidth;\n      }\n      if (diffX > window.innerWidth - offsetWidth + halfWidth) {\n        diffX = window.innerWidth - offsetWidth + halfWidth;\n      }\n\n      if (diffY < halfHeight) {\n        diffY = halfHeight;\n      }\n\n      if (diffY > window.innerHeight - offsetHeight + halfHeight) {\n        diffY = window.innerHeight - offsetHeight + halfHeight;\n      }\n      style.left = `${diffX}px`;\n      style.top = `${diffY}px`;\n    };\n\n    const onDialogMoveEnd = () => {\n      dialog.current.style.cursor = 'default';\n      document.removeEventListener('mousemove', onDialogMove);\n      document.removeEventListener('mouseup', onDialogMoveEnd);\n    };\n\n    const onDialogMoveStart = (e: React.MouseEvent<HTMLDivElement>) => {\n      if (canDraggable) {\n        const { offsetLeft, offsetTop } = dialog.current;\n        dialog.current.style.cursor = 'move';\n        const diffX = e.clientX - offsetLeft;\n        const diffY = e.clientY - offsetTop;\n        dialogOffset = {\n          x: diffX,\n          y: diffY,\n        };\n\n        document.addEventListener('mousemove', onDialogMove);\n        document.addEventListener('mouseup', onDialogMoveEnd);\n      }\n    };\n\n    const dialogElement = (\n      <div\n        ref={dialog}\n        style={style}\n        className={classnames(`${prefixCls}`, `${prefixCls}--default`, classNames)}\n        onMouseDown={onDialogMoveStart}\n      >\n        {closer}\n        {header}\n        {body}\n        {footer}\n      </div>\n    );\n\n    return (\n      <CSSTransition\n        in={props.visible}\n        appear\n        mountOnEnter\n        unmountOnExit={props.destroyOnClose}\n        timeout={transitionTime}\n        classNames={`${prefixCls}-zoom`}\n        onEntered={props.onOpened}\n        onExited={onAnimateLeave}\n        nodeRef={dialog}\n      >\n        {dialogElement}\n      </CSSTransition>\n    );\n  };\n\n  const renderMask = () => {\n    let maskElement;\n    if (showOverlay) {\n      maskElement = (\n        <CSSTransition\n          in={visible}\n          appear\n          timeout={transitionTime}\n          classNames={`${prefixCls}-fade`}\n          mountOnEnter\n          unmountOnExit\n          nodeRef={maskRef}\n        >\n          <div ref={maskRef} onClick={onMaskClick} className={`${prefixCls}__mask`} />\n        </CSSTransition>\n      );\n    }\n    return maskElement;\n  };\n\n  const render = () => {\n    const style: CSSProperties = {};\n    if (visible) {\n      style.display = 'block';\n    }\n    const wrapStyle = {\n      ...style,\n      zIndex,\n    };\n\n    const dialogBody = renderDialog(`${props.placement ? `${prefixCls}--${props.placement}` : ''}`);\n    const wrapClass = classnames(props.className, `${prefixCls}__ctx`, `${prefixCls}__ctx--fixed`);\n    const dialog = (\n      <div ref={wrap} className={wrapClass} style={wrapStyle} onKeyDown={handleKeyDown}>\n        {mode === 'modal' && renderMask()}\n        {dialogBody}\n      </div>\n    );\n\n    let dom = null;\n\n    if (visible || wrap.current) {\n      if (!attach) {\n        dom = dialog;\n      } else {\n        dom = <Portal attach={attach}>{dialog}</Portal>;\n      }\n    }\n\n    return dom;\n  };\n\n  return render();\n};\n\nexport default RenderDialog;\n","import { useCallback, useState } from 'react';\n\nconst isFunction = (arg: unknown) => typeof arg === 'function';\n\n/**\n * 管理 object 类型 state 的 Hooks，用法与 class 组件的 this.setState 基本一致。\n * @param initialState\n * @returns [state, setMergeState]\n */\nconst useSetState = <T extends object>(\n  initialState: T = {} as T,\n): [T, (patch: Partial<T> | ((prevState: T) => Partial<T>)) => void] => {\n  const [state, setState] = useState<T>(initialState);\n\n  const setMergeState = useCallback((patch) => {\n    setState((prevState) => ({ ...prevState, ...(isFunction(patch) ? patch(prevState) : patch) }));\n  }, []);\n\n  return [state, setMergeState];\n};\n\nexport default useSetState;\n","import React, { forwardRef, useEffect, useMemo } from 'react';\nimport isString from 'lodash/isString';\nimport { CloseIcon, InfoCircleFilledIcon, CheckCircleFilledIcon } from 'tdesign-icons-react';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport Button from '../button';\nimport { TdDialogProps, DialogInstance } from './type';\nimport { StyledProps } from '../common';\nimport noop from '../_util/noop';\nimport RenderDialog from './RenderDialog';\nimport useSetState from '../_util/useSetState';\nimport useConfig from '../_util/useConfig';\n\nexport interface DialogProps extends TdDialogProps, StyledProps {\n  /**\n   * 是否以插件形式调用\n   */\n  isPlugin?: boolean;\n}\n\nconst Dialog: React.ForwardRefRenderFunction<DialogInstance, DialogProps> = (props, ref) => {\n  const { classPrefix } = useConfig();\n  const [state, setState] = useSetState<DialogProps>({\n    width: 520,\n    visible: false,\n    zIndex: 2500,\n    placement: 'center',\n    mode: 'modal',\n    showOverlay: true,\n    destroyOnClose: false,\n    draggable: false,\n    preventScrollThrough: true,\n    isPlugin: false,\n    ...props,\n  });\n\n  const [local, t] = useLocaleReceiver('dialog');\n  const confirmText = t(local.confirm);\n  const cancelText = t(local.cancel);\n\n  const {\n    visible,\n    attach = 'body',\n    closeBtn,\n    footer,\n    onCancel = noop,\n    onConfirm = noop,\n    cancelBtn = cancelText,\n    confirmBtn = confirmText,\n    onClose = noop,\n    isPlugin = false,\n    ...restState\n  } = state;\n\n  useEffect(() => {\n    // 插件式调用不会更新props, 只有组件式调用才会更新props\n    if (!isPlugin) {\n      setState((prevState) => ({\n        ...prevState,\n        ...props,\n      }));\n    }\n  }, [props, setState, isPlugin]);\n\n  const prefixCls = `${classPrefix}-dialog`;\n  const renderCloseIcon = () => {\n    if (closeBtn === false) return null;\n    if (closeBtn === true) return <CloseIcon style={{ verticalAlign: 'unset' }} />;\n    return closeBtn || <CloseIcon style={{ verticalAlign: 'unset' }} />;\n  };\n\n  React.useImperativeHandle(ref, () => ({\n    show() {\n      setState({ visible: true });\n    },\n    hide() {\n      setState({ visible: false });\n    },\n    destroy: noop,\n    update(newOptions) {\n      setState((prevState) => ({\n        ...prevState,\n        ...(newOptions as DialogProps),\n      }));\n    },\n  }));\n\n  const renderHeader = useMemo(() => {\n    if (!state.header) return null;\n\n    const iconMap = {\n      info: <InfoCircleFilledIcon className={`${classPrefix}-is-info`} />,\n      warning: <InfoCircleFilledIcon className={`${classPrefix}-is-warning`} />,\n      error: <InfoCircleFilledIcon className={`${classPrefix}-is-error`} />,\n      success: <CheckCircleFilledIcon className={`${classPrefix}-is-success`} />,\n    };\n    return (\n      <div className={`${prefixCls}__header`}>\n        {iconMap[state.theme]}\n        {state.header}\n      </div>\n    );\n  }, [state.header, state.theme, prefixCls, classPrefix]);\n\n  const handleCancel = (e: React.MouseEvent<HTMLButtonElement>) => {\n    onCancel({ e });\n    onClose({ e, trigger: 'cancel' });\n  };\n\n  const handleConfirm = (e: React.MouseEvent<HTMLButtonElement>) => {\n    onConfirm({ e });\n  };\n\n  const defaultFooter = () => {\n    let renderCancelBtn = cancelBtn && (\n      <Button variant=\"outline\">{isString(cancelBtn) ? cancelBtn : cancelText}</Button>\n    );\n\n    let renderConfirmBtn = confirmBtn && (\n      <Button theme=\"primary\">{isString(confirmBtn) ? confirmBtn : confirmText}</Button>\n    );\n\n    if (React.isValidElement(cancelBtn)) {\n      renderCancelBtn = cancelBtn;\n    }\n\n    if (React.isValidElement(confirmBtn)) {\n      renderConfirmBtn = confirmBtn;\n    }\n\n    if (typeof cancelBtn === 'function') {\n      renderCancelBtn = cancelBtn();\n    }\n\n    if (typeof confirmBtn === 'function') {\n      renderConfirmBtn = confirmBtn();\n    }\n    return (\n      <>\n        {renderCancelBtn &&\n          React.cloneElement(renderCancelBtn, {\n            onClick: handleCancel,\n            ...renderCancelBtn.props,\n          })}\n        {renderConfirmBtn &&\n          React.cloneElement(renderConfirmBtn, {\n            onClick: handleConfirm,\n            ...renderConfirmBtn.props,\n          })}\n      </>\n    );\n  };\n\n  return (\n    <RenderDialog\n      {...restState}\n      visible={visible}\n      prefixCls={prefixCls}\n      header={renderHeader}\n      attach={attach}\n      closeBtn={renderCloseIcon()}\n      classPrefix={classPrefix}\n      onClose={onClose}\n      footer={footer === undefined ? defaultFooter() : footer}\n    />\n  );\n};\n\nexport default forwardRef(Dialog);\n","import _Dialog from './Dialog';\n\nimport './style/index.js';\n\nexport type { DialogProps } from './Dialog';\nexport * from './type';\n\nexport { DialogPlugin, dialog } from './plugin';\nexport const Dialog = _Dialog;\nexport default Dialog;\n"],"names":["element","SearchIcon","forwardRef","props","ref","createElement","IconBase","id","icon","displayName","mousePosition","window","document","documentElement","addEventListener","e","x","clientX","y","clientY","setTimeout","RenderDialog","prefixCls","attach","visible","mode","zIndex","showOverlay","onEscKeydown","noop","onClosed","onClose","onCloseBtnClick","onOverlayClick","preventScrollThrough","closeBtn","wrap","useRef","dialog","maskRef","bodyOverflow","bodyCssTextRef","isModal","canDraggable","draggable","useEffect","current","body","style","overflow","cssText","useLayoutEffect","scrollWidth","innerWidth","offsetWidth","bodyCssText","width","position","focus","transformOrigin","offsetLeft","offsetTop","onAnimateLeave","display","left","top","onMaskClick","target","currentTarget","trigger","handleCloseBtnClick","handleKeyDown","code","keyCode","stopPropagation","wrapStyle","dialogBody","classNames","dest","footer","React","className","header","children","closer","onClick","dialogOffset","onDialogMove","style2","offsetHeight","halfHeight","clientHeight","halfWidth","clientWidth","diffX","diffY","innerHeight","onDialogMoveEnd","cursor","removeEventListener","dialogElement","classnames","onMouseDown","CSSTransition","appear","mountOnEnter","unmountOnExit","destroyOnClose","timeout","onEntered","onOpened","onExited","nodeRef","renderDialog","placement","wrapClass","dialog2","onKeyDown","maskElement","renderMask","dom","Portal","render","isFunction","arg","Dialog","classPrefix","useConfig","initialState","useState","state","setState","setMergeState","useCallback","patch","prevState","useSetState","isPlugin","useLocaleReceiver","local","t","confirmText","confirm","cancelText","cancel","onCancel","onConfirm","cancelBtn","confirmBtn","restState","show","hide","destroy","update","newOptions","renderHeader","useMemo","iconMap","info","InfoCircleFilledIcon","warning","error","success","CheckCircleFilledIcon","theme","handleCancel","handleConfirm","CloseIcon","verticalAlign","renderCancelBtn","Button","variant","isString","renderConfirmBtn","defaultFooter"],"sourceRoot":""}
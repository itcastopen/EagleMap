{"version":3,"file":"static/js/301.7b35b6cb.chunk.js","mappings":"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","sources":["utils/request.ts","api/api.ts","components/NoData.tsx","components/React-CMap.tsx","../node_modules/tdesign-icons-react/src/components/search.tsx","components/Search.tsx","pages/fence/details.tsx","utils/tool.ts"],"sourcesContent":["import axios, { AxiosRequestConfig, AxiosError, AxiosResponse } from 'axios';\nimport { MessagePlugin } from 'tdesign-react';\nimport { getToken, removeToken } from '../utils/cookie';\n\ninterface ResponseData<T> {\n  code: number;\n  data: T;\n  msg: string;\n}\n\n// 指定 axios 请求类型\n(axios.defaults.headers as any) = {\n  'Content-Type': 'application/json;charset=utf-8',\n};\n\n// 指定请求地址\naxios.defaults.baseURL = '' // : 'https://mock.boxuegu.com/mock/2894/';\n\n// 添加请求拦截器\naxios.interceptors.request.use(\n  (config: AxiosRequestConfig ) => {\n    const token = getToken();\n    // 获取用户token，用于校验\n    /* eslint-disable  no-param-reassign */\n    if (token) {\n      (config.headers as any).Authorization = token;\n    }\n    return config;\n  },\n  (error: AxiosError) => Promise.reject(error),\n);\n\n// 添加响应拦截器，拦截登录过期或者没有权限\n\naxios.interceptors.response.use(\n  (response: AxiosResponse<ResponseData<any>>) => {\n    if (!response.data) {\n      return Promise.resolve(response);\n    }\n    // 请求成功\n    if (response.status === 200) {\n      return response.data as any;\n    }\n    // token 超时 失效\n    if (response.status === 401 || response.data.code === 401) {\n      removeToken()\n      window.location.href = '/login'\n    }\n\n    // 请求成功，状态不为成功时\n    MessagePlugin.error(response.data.msg);\n\n    return Promise.reject(new Error(response.data.msg));\n  },\n  (error: AxiosError) => {\n    MessagePlugin.error(error.message);\n    const status = error.response!.status\n    if (status === 401) {\n      removeToken()\n      window.location.href = '/login'\n    } else {\n      return Promise.reject(error);\n    }\n  },\n);\n\n// 统一发起请求的函数\nexport function request<T>(options: AxiosRequestConfig) {\n  return axios.request<T>(options);\n}\n","import { request } from '../utils/request';\n// import { UserState } from '../store/module/user';\n\nexport interface UserLoginDataRq  {\n  code: number,\n  msg: string,\n  data: {\n    token: string\n  }\n}\n\nexport interface UserLoginData {\n  userName: string;\n  password: string;\n}\n\n// 登录接口\nexport function apiUserLogin(data: UserLoginData) {\n  return request<UserLoginDataRq>({\n    method: 'POST',\n    url: '/sys/login',\n    data,\n    params:data,\n  });\n}\n\n// 系统配置\nexport function apiSysConfig() {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/config',\n  });\n}\n\n// 轨迹服务管理\nexport function apiTraceServer(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/trace/server',\n    data,\n    params:data,\n  });\n}\n\n// 轨迹列表\nexport function apiTraceList(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/trace',\n    data,\n    params:data,\n  });\n}\n\n// 删除轨迹\nexport function apiDeleteTrace(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/trace/${data.id}`,\n    data,\n    params:data,\n  });\n}\n\n// 电子围栏列表\nexport function apiFenceList(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/fence',\n    data,\n    params:data,\n  });\n}\n\n// 电子围栏列表详情\nexport function apiFenceDetails(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: `/sys/fence/${data.fenceId}`,\n    data,\n  });\n}\n// 删除电子围栏\nexport function apiDeleteFence(data:any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/fence/${data.fenceId}`,\n    data,\n    params:data\n  });\n}\n// 终端列表\nexport function apiTerminal(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/terminal',\n    data,\n    params:data,\n  });\n}\n\n// 删除终端\nexport function apiDeleteTerminalld(data:any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/terminal/${data.id}`,\n    data,\n    params:data\n  });\n}","import imgUrl from './../assets/images/nodata.png'\nexport default function nodata(){\n    return (\n        <div className='noData'>\n            <img src={imgUrl} width=\"245\" height=\"201\" alt=\"\" />\n            <div>没有数据orz</div>\n        </div>\n    )\n}","import { Component, ReactNode } from \"react\";\n\nimport  CMap, { CZMapTP }  from 'czmap';\n\ntype Props = {\n    options: CZMapTP\n}\nexport class CZMap extends Component<Props> {\n    \n    componentDidMount(){\n        new CMap(this.props.options)\n    }\n\n    render(): ReactNode {\n        return (<div id=\"baidumap\" style={{width: '100%', height: '560px'}} ></div>)\n    }\n}","// This file is generated automatically by `useTemplate.ts`. DO NOT EDIT IT.\n\nimport { createElement, forwardRef, Ref } from 'react';\nimport { IconBase, IconProps } from '../icon';\n\nimport '../style/css';\n\nconst element = {\"tag\":\"svg\",\"attrs\":{\"fill\":\"none\",\"viewBox\":\"0 0 16 16\",\"width\":\"1em\",\"height\":\"1em\"},\"children\":[{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M9.51 10.22a4.76 4.76 0 11.7-.7l3.54 3.52-.7.71-3.54-3.53zm.77-3.7a3.76 3.76 0 10-7.53 0 3.76 3.76 0 007.53 0z\",\"fillOpacity\":0.9}}]};\n\nconst SearchIcon = forwardRef<SVGElement, IconProps>((props: IconProps, ref: Ref<SVGElement>) => createElement(\n  IconBase,\n  {\n    ...props,\n    id: 'search',\n    ref,\n    icon: element,\n  },\n));\n\nSearchIcon.displayName = 'SearchIcon';\n\nexport default SearchIcon;\n","import { useEffect, useState } from \"react\";\nimport { Input, InputValue } from \"tdesign-react\";\nimport { SearchIcon } from \"tdesign-icons-react\";\nexport type searchConfType = {\n  label: string;  // 搜索的标题文案\n  key: string;    // key值   \n  value: string;  // 搜索关键字 - 初始化\n  callback: Function; // 搜索回调\n  setValue?: Function; // 输入onChange回调\n};\n// 搜索组件\nexport function Search(props: any) {\n  const data = props.searchConf;\n  const [params, setParams] = useState({});\n  let initValue: any = {};\n\n  useEffect(() => {\n    data.forEach((el: searchConfType) => {\n      initValue[el.key] = el.value !== \"\" ? el.value : undefined;\n    });\n    setParams(initValue);\n    console.log(3333)\n  }, []);\n\n  return (\n    <div className=\"searchCont\">\n      {data.map((item: searchConfType, index: number) => (\n        <div className=\"searchitem\" key={index}>\n          <div className=\"label\">{item.label}</div>\n          <Input\n            placeholder=\"请输入\"\n            value={(params as any)[item.key]}\n            type=\"text\"\n            onEnter={() => {\n              item.callback(params);\n            }}\n            onChange={(value: InputValue) => {\n              const par: any = {};\n              par[item.key] = value;\n              setParams({ ...params, ...par });\n              if (item.setValue) {\n                item.setValue!({ ...params, ...par });\n              }         \n            }}\n          />\n          <SearchIcon\n            className=\"searchIcon\"\n            name=\"search\"\n            size=\"medium\"\n            onClick={() => {\n              item.callback(params);\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n","import { Search, searchConfType } from \"../../components/Search\";\nimport { CZMap } from \"./../../components/React-CMap\";\nimport { Breadcrumb } from \"tdesign-react\";\nimport { useState, useEffect } from \"react\";\nimport { Table, Dialog, Button, MessagePlugin } from \"tdesign-react\";\nimport { ErrorCircleFilledIcon } from \"tdesign-icons-react\";\nimport NoData from \"../../components/NoData\";\nimport { fenceDataChange } from \"../../utils/tool\";\nimport { apiTerminal, apiDeleteTerminalld } from \"../../api/api\";\nimport moment from \"moment\";\nconst { BreadcrumbItem } = Breadcrumb;\n\nfunction TrajectoryDetails(props: any) {\n  // 搜索数据定义\n  const serverId = props.match.params.id;\n  const listData = props.location.state;\n  const [page, setPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [terminalData, setTerminalData] = useState([]);\n  const [total, setTotal] = useState(30);\n  const [visible, setVisible] = useState(false);\n  const [deleteDish, setDeleteDish] = useState({});\n  const [provider] = useState(\"BAIDU\");\n  const type = listData.provider === \"BAIDU\" ? \"BMAP\" : listData.provider;\n  const pointData = JSON.parse(listData.param);\n  const searchConf: searchConfType[] = [\n    {\n      label: \"设备名称:\",\n      key: \"terminalName\",\n      value: \"\",\n      callback: searchHandle,\n    },\n    {\n      label: \"设备ID:\",\n      key: \"terminalId\",\n      value: \"\",\n      callback: searchHandle,\n    },\n  ];\n  // 围栏类型 // CIRCLE-圆形，POLYGON-多边形，POLYLINE-线性，DISTRICT-行政区\n  const enclosureData = fenceDataChange(type, listData.type, pointData);\n  let enclosure = {\n    strokeColor: \"#6699FF\",\n    strokeWeight: 2,\n    strokeOpacity: 1,\n  };\n  enclosure = Object.assign(enclosure, enclosureData);\n  const options = {\n    id: \"baidumap\", // 配置地图的着陆点  id\n    mapAk: \"\", // 写入Ak\n    poiText: true, //是否显示POI信息\n    poiIcon: true, //是否显示POI图标信息\n    type, // 设置使用地图的类型 BMAP 百度地图、 TMAP 腾讯、、AMAP 高德\n    points: [116.404, 39.915], // 中心点设置\n    areaName: \"上海市\", // 中心城市\n    zoom: 11, // 缩放级别\n    enableScrollWheel: false, // 开启滚轮\n    isScaleCtrl: true, // 添加比例尺控件\n    isZoomCtrl: true, // 添加缩放控件\n    navi3DCtrl: false, // 添加3D控件\n    enclosure,\n  };\n  // 生命周期调用数据\n  useEffect(() => {\n    getData();\n  }, []);\n  // 获取数据\n  function getData(items?: any) {\n    apiTerminal({\n      page: items?.page ?? page,\n      pageSize: items?.pageSize ?? pageSize,\n      terminalName: items?.terminalName,\n      terminalId: items?.terminalId,\n      provider: items?.provider ?? provider,\n      serverId,\n    }).then((res: any) => {\n      const { data } = res;\n      if (res.code === 0) {\n        setTerminalData(data.items);\n        setTotal(data.total);\n      } else {\n        MessagePlugin.error(\"请求出错！\");\n      }\n    });\n  }\n\n  // 搜索功能\n  function searchHandle(searchVal: any) {\n    setPage(1);\n    setPageSize(10);\n    getData({ setTerminalPage: 1, setTerminalPageSize: 10, ...searchVal });\n  }\n\n  // 删除功能\n  const deleteHandle = () => {\n    if (deleteDish && (deleteDish as any).terminalId) {\n      const {terminalId,serverId} = deleteDish as any\n      apiDeleteTerminalld({id:terminalId,serverId, provider}).then(res => {\n        if ((res as any).code == 0){\n          setDeleteDish({});\n          setVisible(false);\n          MessagePlugin.success('信息删除成功！');\n          getData()\n        } else {\n          MessagePlugin.error((res as any).msg);\n        }\n      })   \n      \n    } else {\n      MessagePlugin.error(\"删除请求出错了\");\n    }\n  };\n  // 关闭弹框\n  const handleFooterClose = () => {\n    setVisible(false);\n  };\n  \n  return (\n    <>\n      <div className=\"BreadcrumbCont\">\n        <Breadcrumb maxItemWidth=\"200px\" theme=\"light\">\n          <BreadcrumbItem href=\"/fence\">电子围栏</BreadcrumbItem>\n          <BreadcrumbItem>详情</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <div className=\"container trajectory_details\">\n        <div className=\"detailCont\">\n          <Table\n            data={[listData]}\n            columns={[\n              {\n                align: \"left\",\n                className: \"test\",\n                ellipsis: true,\n                colKey: \"name\",\n                title: \"围栏名称\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"fenceId\",\n                title: \"围栏ID\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                cell({ row }) {\n                  switch (row?.type) {\n                    case \"DISTRICT\":\n                      return <>行政区域</>;\n                    case \"CIRCLE\":\n                      return <>圆形</>;\n                    case \"POLYGON\":\n                      return <>多边型</>;\n                    case \"POLYLINE\":\n                      return <>线形</>;\n                    default:\n                      return null;\n                  }\n                },\n                title: \"围栏类型\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                cell({ row }) {\n                  switch (row?.provider) {\n                    case \"BAIDU\":\n                      return <>百度地图</>;\n                    case \"AMAP\":\n                      return <>高德地图</>;\n                    case \"QQ\":\n                      return <>腾讯地图</>;\n                    default:\n                      return null;\n                  }\n                },\n                title: \"服务商\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"serverId\",\n                title: \"服务ID\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"created\",\n                title: \"创建时间\",\n                cell({ row }) {\n                  return moment(row.created).format(\"YYYY-MM-DD HH:mm:ss\");\n                },\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"updated\",\n                title: \"更新时间\",\n                cell({ row }) {\n                  return moment(row.updated).format(\"YYYY-MM-DD HH:mm:ss\");\n                },\n                minWidth: 200,\n              },\n            ]}\n            rowKey=\"index\"\n            verticalAlign=\"top\"\n            bordered\n            hover\n          ></Table>\n          <div className=\"DetBMap\">\n            <CZMap options={options} />\n          </div>\n        </div>\n        <div className=\"searchCont\">\n          <Search searchConf={searchConf}></Search>\n          <div className=\"tdesign-demo-block-row\"></div>\n        </div>\n        <div className=\"tableCont\">\n          {terminalData && terminalData.length > 0 ? (\n            <Table\n              data={terminalData}\n              columns={[\n                {\n                  align: \"left\",\n                  className: \"test\",\n                  ellipsis: true,\n                  colKey: \"name\",\n                  title: \"设备名称\",\n                },\n                {\n                  align: \"left\",\n                  className: \"test\",\n                  ellipsis: true,\n                  colKey: \"provider\",\n                  cell({ row }) {\n                    switch (row?.provider) {\n                      case \"BAIDU\":\n                        return <>百度地图</>;\n                      case \"AMAP\":\n                        return <>高德地图</>;\n                      case \"QQ\":\n                        return <>腾讯地图</>;\n                      default:\n                        return null;\n                    }\n                  },\n                  title: \"服务商\",\n                },\n                {\n                  align: \"left\",\n                  className: \"test4\",\n                  ellipsis: true,\n                  colKey: \"id\",\n                  title: \"服务ID\",\n                },\n                {\n                  align: \"left\",\n                  className: \"test4\",\n                  ellipsis: true,\n                  colKey: \"created\",\n                  cell({ row }) {\n                    return moment(row.created).format(\"YYYY-MM-DD HH:mm:ss\");\n                  },\n                  title: \"创建时间\",\n                },\n                {\n                  align: \"left\",\n                  className: \"test4\",\n                  ellipsis: true,\n                  colKey: \"updated\",\n                  cell({ row }) {\n                    return moment(row.updated).format(\"YYYY-MM-DD HH:mm:ss\");\n                  },\n                  title: \"更新时间\",\n                },\n                {\n                  align: \"left\",\n                  className: \"test4\",\n                  ellipsis: true,\n                  title: \"范围\",\n                  cell({ row }) {\n                    switch (row?.isOut) {\n                      case true:\n                        return <p className=\"succ\">未超出</p>;\n                      case false:\n                        return <p className=\"fail\">已超出</p>;\n                      default:\n                        return <>--</>;\n                    }\n                  },\n                },\n                {\n                  align: \"left\",\n                  className: \"test4\",\n                  ellipsis: true,\n                  colKey: \"desc\",\n                  title: \"描述\",\n                },\n                {\n                  colKey: \"op\",\n                  width: 100,\n                  title: \"操作\",\n                  align: \"center\",\n                  fixed: \"right\",\n                  cell(record: any) {\n                    return (\n                      <>\n                        <a\n                          className=\"link\"\n                          onClick={() => {\n                            setDeleteDish(record.row);\n                            setVisible(true);\n                          }}\n                        >\n                          删除\n                        </a>\n                      </>\n                    );\n                  },\n                },\n              ]}\n              rowKey=\"index\"\n              verticalAlign=\"top\"\n              bordered\n              hover\n              pagination={{\n                defaultCurrent: page,\n                defaultPageSize: pageSize,\n                total,\n                showJumper: true,\n                onChange(pageInfo) {\n                  setPageSize(pageInfo.pageSize);\n                  setPage(pageInfo.current);\n                  getData();\n                },\n              }}\n            ></Table>\n          ) : (\n            <NoData />\n          )}\n          <Dialog\n            header={\n              <>\n                <ErrorCircleFilledIcon style={{ color: \"#ED7B2F\" }} />\n                <span>确定要删除这条轨迹吗？</span>\n              </>\n            }\n            footer={\n              <>\n                <Button\n                  theme=\"default\"\n                  variant=\"outline\"\n                  onClick={() => setVisible(false)}\n                >\n                  取消\n                </Button>\n                <Button theme=\"danger\" onClick={() => deleteHandle()}>\n                  删除\n                </Button>\n              </>\n            }\n            visible={visible}\n            onClose={handleFooterClose}\n          ></Dialog>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default TrajectoryDetails;\n","\n// 地图路径转换 后台数据转对应数据\nexport function pathChangeHandle(type:string, path:{string:any}[]):[]{\n    let pathList:any = [];\n    if (type === 'BMAP'){\n      pathList = path.map((it:any) => ({'lng': it.longitude, 'lat': it.latitude}))\n    } else if (type === 'AMAP'){\n      pathList = path.map((it:any) => {\n        const point = it.location.split(',')\n        return {'lng':point[0], 'lat':point[1]}\n      })\n    } else if(type === 'TMAP'){\n     console.log(\"开发中...\");\n    }\n    return pathList\n  }\n// 围栏数据转换\n/**\n * 高德：\n圆形围栏数据：\n{\"center\":\"116.344132,40.061937\",\"radius\":5000}\n多边形围栏数据：\n{\"points\":\"116.341622,40.063412;116.346729,40.064546;116.347072,40.060358;116.342373,40.059553\"}\n线形围栏数据：\n{\"bufferradius\":200,\"points\":\"116.347115,40.060325;116.342909,40.05957;116.336493,40.058338\"}\n行政区围栏：\n{\"adcode\":110105}\n\n * 百度：\n圆形围栏数据：\n{\"latitude\":\"40.061937\",\"radius\":5000,\"longitude\":\"116.344132\"}\n多边形围栏数据：\n{\"vertexes\":\"40.063412,116.341622;40.064546,116.346729;40.060358,116.347072;40.059553,116.342373\"}\n线形围栏数据：\n{\"offset\":200,\"vertexes\":\"40.060325,116.347115;40.05957,116.342909;40.058338,116.336493\"}\n行政区围栏：\n{\"keyword\":\"北京市\"}\n * **/\nexport function fenceDataChange(type:string,shape:string,data:any){\n  let fenceData:any = {}\n  // 高德地图 圆形围栏\n  if (type === 'AMAP' && shape === 'CIRCLE'){\n    fenceData.point = data.center.split(',')\n    fenceData.radius = data.radius\n    fenceData.type = 'circle'\n  // 高德地图 多边形围栏\n  } else if ((type === 'AMAP' && shape === 'POLYGON') ){\n    fenceData.type = 'polygon'\n    const dataArray = data.points.split(';')\n    fenceData.points = dataArray.length > 0 && dataArray.map((it:string) => {\n      const point = it.split(',')\n      return {lng:point[0], lat: point[1]}\n    })\n    // 高德地图 线性形围栏\n  } else if(type === 'AMAP' && shape === 'POLYLINE'){\n    fenceData.type = 'polyline'\n    const dataArray = data.points.split(';')\n    fenceData.offset = data.bufferradius\n    fenceData.points = dataArray.length > 0 && dataArray.map((it:string) => {\n      const point = it.split(',')\n      return {lng:point[0], lat: point[1]}\n    })\n    // 高德地图 行政区域围栏\n  } else if(type === 'AMAP' && shape === 'DISTRICT'){\n    fenceData.type = 'district'\n    fenceData.adcodes = [data.adcode]\n    // 百度地图 圆形围栏\n  } else if (type === 'BMAP' && shape === 'CIRCLE'){\n    fenceData.point = [data.longitude, data.latitude]\n    fenceData.radius = data.radius\n    fenceData.type = 'circle'\n    // 百度地图 多边形围栏\n  } else if ((type === 'BMAP' && shape === 'POLYGON')){\n    fenceData.type = 'polygon'\n    const dataArray = data.vertexes.split(';')\n    fenceData.points = dataArray.length > 0 && dataArray.map((it:string) => {\n      const point = it.split(',')\n      return {lng:point[1], lat: point[0]}\n    })\n    // 百度地图 线性形围栏\n  } else if (type === 'BMAP' && shape === 'POLYLINE'){\n    fenceData.type = 'polyline'\n    fenceData.offset = data.offset\n    const dataArray = data.vertexes.split(';')\n    fenceData.points = dataArray.length > 0 && dataArray.map((it:string) => {\n      const point = it.split(',')\n      return {lng:point[1], lat: point[0]}\n    })\n    // 百度地图 行政区域形围栏\n  } else if (type === 'BMAP' && shape === 'DISTRICT'){\n    fenceData.type = 'district'\n    fenceData.proname = data.keyword\n  }\n\n  return fenceData\n}\n// 安毫秒转换为时、（h）、分(m)、秒(s)\nexport function timeFormat(data:string | number):string{\n    let time:string = '--';\n    if (data && data < 60000){\n      time = Number(data)/1000 + 's'\n    }  \n    if (data && data >= 60000 && data < 3600000) {\n      time = Number(data)/60000 + 'm'\n    }\n    if (data && data > 3600000) {\n      time = Number(data)/3600000 + 'H'\n    }\n    return time;\n}"],"names":["request","options","axios","apiUserLogin","data","method","url","params","apiSysConfig","apiTraceServer","apiTraceList","apiDeleteTrace","id","apiFenceList","apiDeleteFence","fenceId","apiTerminal","apiDeleteTerminalld","config","token","getToken","headers","Authorization","error","Promise","reject","response","status","code","removeToken","window","location","href","MessagePlugin","msg","Error","resolve","message","nodata","className","src","imgUrl","width","height","alt","CZMap","CMap","this","props","style","Component","element","SearchIcon","forwardRef","ref","createElement","IconBase","icon","displayName","Search","searchConf","useState","setParams","initValue","useEffect","forEach","el","key","value","undefined","console","log","map","item","index","label","I","placeholder","type","onEnter","callback","onChange","par","setValue","name","size","onClick","BreadcrumbItem","Breadcrumb","serverId","match","listData","state","page","setPage","pageSize","setPageSize","terminalData","setTerminalData","total","setTotal","visible","setVisible","deleteDish","setDeleteDish","provider","pointData","JSON","parse","param","searchHandle","enclosureData","fenceDataChange","enclosure","strokeColor","strokeWeight","strokeOpacity","mapAk","poiText","poiIcon","points","areaName","zoom","enableScrollWheel","isScaleCtrl","isZoomCtrl","navi3DCtrl","Object","assign","getData","items","terminalName","terminalId","then","res","searchVal","setTerminalPage","setTerminalPageSize","maxItemWidth","theme","columns","align","ellipsis","colKey","title","minWidth","cell","row","moment","created","format","updated","rowKey","verticalAlign","bordered","hover","length","isOut","fixed","record","pagination","defaultCurrent","defaultPageSize","showJumper","pageInfo","current","header","color","footer","variant","deleteHandle","onClose","pathChangeHandle","path","pathList","it","longitude","latitude","point","split","shape","fenceData","center","radius","dataArray","lng","lat","offset","bufferradius","adcodes","adcode","vertexes","proname","keyword","timeFormat","time","Number"],"sourceRoot":""}
{"version":3,"file":"static/js/75.8a4f601d.chunk.js","mappings":"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","sources":["components/React-CMap.tsx","pages/trajectory/details.tsx","utils/tool.ts"],"sourcesContent":["import { Component, ReactNode } from \"react\";\n\nimport  CMap, { CZMapTP }  from 'czmap';\n\ntype Props = {\n    options: CZMapTP\n}\nexport class CZMap extends Component<Props> {\n    constructor(props:Props){\n        super(props)\n    }\n    \n    componentDidMount(){\n        new CMap(this.props.options)\n    }\n\n    render(): ReactNode {\n        return (<div id=\"baidumap\" style={{width: '100%', height: '560px'}} ></div>)\n    }\n}","import { Table } from \"tdesign-react\";\nimport { useEffect } from \"react\";\nimport {CZMap} from './../../components/React-CMap'\nimport {pathChangeHandle} from '../../utils/tool'\n// import { connect } from \"react-redux\";\nimport { Breadcrumb } from 'tdesign-react';\nconst { BreadcrumbItem } = Breadcrumb;\n\n\ntype searchConfType = {\n  label: string;\n  value: string;\n  callback?: Function;\n}[];\n\ntype trajectoryData = {\n  name: string;\n  id: string;\n  serverName: string;\n  serverId: string;\n  trajectoryLength: string;\n  time: string;\n  createTime: string;\n}[];\n\nfunction TrajectoryDetails(props: any) {\n  const listData = props.location.state\n  const pathData = JSON.parse(listData.pointList)\n  const type = listData.provider == 'BAIDU' ? 'BMAP' : listData.provider\n  const drivingPath = pathData ? pathChangeHandle(type,pathData) : [];\n  \n  console.log(drivingPath)\n  const options = {\n    id: 'baidumap', // 配置地图的着陆点  id\n    mapAk: '', // 写入Ak\n    poiText: true, //是否显示POI信息\n    poiIcon: true, //是否显示POI图标信息\n    type, // 设置使用地图的类型 BMAP 百度地图、 TMAP 腾讯、、AMAP 高德\n    points: [116.404, 39.915], // 中心点设置 \n    areaName: '上海市', // 中心城市\n    zoom: 15, // 缩放级别 \n    enableScrollWheel: false, // 开启滚轮\n    isScaleCtrl: true, // 添加比例尺控件\n    isZoomCtrl: true, // 添加缩放控件\n    navi3DCtrl: true, // 添加3D控件\n    drivingPath,\n}\n  useEffect(() => {\n    \n  })\n  return (\n    <>\n      <div className=\"BreadcrumbCont\">\n        <Breadcrumb maxItemWidth=\"200px\" theme=\"light\">\n          <BreadcrumbItem>轨迹</BreadcrumbItem>\n          <BreadcrumbItem>详情</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <div className=\"container trajectory_details\">\n        <div className=\"detailCont\">\n        <Table\n            data={[listData]}\n            columns={[\n              {\n                align: \"left\",\n                className: \"test\",\n                ellipsis: true,\n                colKey: \"name\",\n                title: \"轨迹名称\",\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"id\",\n                title: \"轨迹ID\",\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                cell({ row }) {\n                  switch (row?.provider) {\n                    case \"BAIDU\":\n                      return <>百度地图</>;\n                    case \"AMAP\":\n                      return <>高德地图</>;\n                    case \"QQ\":\n                      return <>腾讯地图</>;\n                    default:\n                      return null;\n                  }\n                },\n                title: \"服务商名称\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"serverId\",\n                title: \"服务ID\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"distance\",\n                title: \"轨迹长度\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"time\",\n                title: \"持续时间\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"startTime\",\n                title: \"创建时间\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"endTime\",\n                title: \"结束时间\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"size\",\n                title: \"轨迹点数\",\n                minWidth: 200,\n              },\n            ]}\n            rowKey=\"index\"\n            verticalAlign=\"top\"\n            bordered\n            hover\n          ></Table>\n          <div className=\"DetBMap\">\n            <CZMap options={options} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default TrajectoryDetails\n","\n// 地图路径转换 后台数据转对应数据\n\nexport function pathChangeHandle(type:string, path:{string:any}[]):[]{\n    let pathList:any = [];\n    if (type === 'BMAP'){\n      pathList = path.map((it:any) => ({'lng': it.longitude, 'lat': it.latitude}))\n    } else if (type === 'AMAP'){\n      pathList = path.map((it:any) => {\n        const point = it.location.split(',')\n        return {'lng':point[0], 'lat':point[1]}\n      })\n    } else if(type == 'TMAP'){\n      console.log('暂时不开发！')\n    }\n    return pathList\n  }\n// 围栏数据转换\n/**\n * 高德：\n圆形围栏数据：\n{\"center\":\"116.344132,40.061937\",\"radius\":5000}\n多边形围栏数据：\n{\"points\":\"116.341622,40.063412;116.346729,40.064546;116.347072,40.060358;116.342373,40.059553\"}\n线形围栏数据：\n{\"bufferradius\":200,\"points\":\"116.347115,40.060325;116.342909,40.05957;116.336493,40.058338\"}\n行政区围栏：\n{\"adcode\":110105}\n\n * 百度：\n圆形围栏数据：\n{\"latitude\":\"40.061937\",\"radius\":5000,\"longitude\":\"116.344132\"}\n多边形围栏数据：\n{\"vertexes\":\"40.063412,116.341622;40.064546,116.346729;40.060358,116.347072;40.059553,116.342373\"}\n线形围栏数据：\n{\"offset\":200,\"vertexes\":\"40.060325,116.347115;40.05957,116.342909;40.058338,116.336493\"}\n行政区围栏：\n{\"keyword\":\"北京市\"}\n * **/\nexport function fenceDataChange(type:string,shape:string,data:any){\n  let fenceData:any = {}\n  if (type == 'AMAP' && shape === 'CIRCLE'){\n    fenceData.point = data.center.split(',')\n    fenceData.radius = data.radius\n    fenceData.type = 'circle'\n  } else if (type == 'AMAP' && shape === 'POLYGON' || type == 'AMAP' && shape === 'POLYLINE'){\n    fenceData.type = 'polygon'\n    const dataArray = data.points.split(';')\n    fenceData.points = dataArray.length > 0 && dataArray.map((it:string) => {\n      const point = it.split(',')\n      return {lng:point[0], lat: point[1]}\n    })\n  } else if (type == 'BMAP' && shape === 'CIRCLE'){\n    fenceData.point = [data.longitude, data.latitude]\n    fenceData.radius = data.radius\n    fenceData.type = 'circle'\n  } else if (type == 'BMAP' && shape === 'POLYGON' || type == 'BMAP' && shape === 'POLYLINE'){\n    fenceData.type = 'polygon'\n    const dataArray = data.vertexes.split(';')\n    fenceData.points = dataArray.length > 0 && dataArray.map((it:string) => {\n      const point = it.split(',')\n      return {lng:point[1], lat: point[0]}\n    })\n  }\n\n  return fenceData\n}"],"names":["CZMap","props","CMap","this","options","id","style","width","height","Component","BreadcrumbItem","Breadcrumb","listData","location","state","pathData","JSON","parse","pointList","type","provider","drivingPath","pathChangeHandle","console","log","mapAk","poiText","poiIcon","points","areaName","zoom","enableScrollWheel","isScaleCtrl","isZoomCtrl","navi3DCtrl","useEffect","className","maxItemWidth","theme","data","columns","align","ellipsis","colKey","title","cell","row","minWidth","rowKey","verticalAlign","bordered","hover","path","pathList","map","it","longitude","latitude","point","split","fenceDataChange","shape","fenceData","center","radius","dataArray","length","lng","lat","vertexes"],"sourceRoot":""}
{"version":3,"file":"static/js/850.fa0d62d9.chunk.js","mappings":"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","sources":["utils/request.ts","api/api.ts","components/NoData.tsx","../node_modules/tdesign-icons-react/src/components/search.tsx","components/Search.tsx","pages/trajectory/index.tsx","utils/tool.ts"],"sourcesContent":["import axios, { AxiosRequestConfig, AxiosError, AxiosResponse } from 'axios';\nimport { MessagePlugin } from 'tdesign-react';\nimport { getToken, removeToken } from '../utils/cookie';\n\ninterface ResponseData<T> {\n  code: number;\n  data: T;\n  msg: string;\n}\n\n// 指定 axios 请求类型\n(axios.defaults.headers as any) = {\n  'Content-Type': 'application/json;charset=utf-8',\n};\n\n// 指定请求地址\naxios.defaults.baseURL = '' // : 'https://mock.boxuegu.com/mock/2894/';\n\n// 添加请求拦截器\naxios.interceptors.request.use(\n  (config: AxiosRequestConfig ) => {\n    const token = getToken();\n    // 获取用户token，用于校验\n    /* eslint-disable  no-param-reassign */\n    if (token) {\n      (config.headers as any).Authorization = token;\n    }\n    return config;\n  },\n  (error: AxiosError) => Promise.reject(error),\n);\n\n// 添加响应拦截器，拦截登录过期或者没有权限\n\naxios.interceptors.response.use(\n  (response: AxiosResponse<ResponseData<any>>) => {\n    if (!response.data) {\n      return Promise.resolve(response);\n    }\n\n    // 请求成功\n    if (response.status === 200) {\n      return response.data as any;\n    }\n    // token 超时 失效\n    if (response.status === 401) {\n      removeToken()\n      window.location.href = '/login'\n    }\n\n    // 请求成功，状态不为成功时\n    MessagePlugin.error(response.data.msg);\n\n    return Promise.reject(new Error(response.data.msg));\n  },\n  (error: AxiosError) => {\n    MessagePlugin.error(error.message);\n\n    return Promise.reject(error);\n  },\n);\n\n// 统一发起请求的函数\nexport function request<T>(options: AxiosRequestConfig) {\n  return axios.request<T>(options);\n}\n","import { request } from '../utils/request';\n// import { UserState } from '../store/module/user';\n\nexport interface UserLoginDataRq  {\n  code: number,\n  msg: string,\n  data: {\n    token: string\n  }\n}\n\nexport interface UserLoginData {\n  userName: string;\n  password: string;\n}\n\n// 登录接口\nexport function apiUserLogin(data: UserLoginData) {\n  return request<UserLoginDataRq>({\n    method: 'POST',\n    url: '/sys/login',\n    data,\n    params:data,\n  });\n}\n\n// 系统配置\nexport function apiSysConfig() {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/config',\n  });\n}\n\n// 轨迹服务管理\nexport function apiTraceServer(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/trace/server',\n    data,\n    params:data,\n  });\n}\n\n// 轨迹列表\nexport function apiTraceList(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/trace',\n    data,\n    params:data,\n  });\n}\n\n// 删除轨迹\nexport function apiDeleteTrace(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/trace/${data.id}`,\n    data,\n    params:data,\n  });\n}\n\n// 电子围栏列表\nexport function apiFenceList(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/fence',\n    data,\n    params:data,\n  });\n}\n\n// 电子围栏列表详情\nexport function apiFenceDetails(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: `/sys/fence/${data.fenceId}`,\n    data,\n  });\n}\n// 删除电子围栏\nexport function apiDeleteFence(data:any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/fence/${data.fenceId}`,\n    data,\n  });\n}\n// 终端列表\nexport function apiTerminal(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/terminal',\n    data,\n    params:data,\n  });\n}\n\n// 删除终端\nexport function apiDeleteTerminalld(data:any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/terminal/${data.id}`,\n    data,\n  });\n}","import imgUrl from './../assets/images/nodata.png'\nexport default function nodata(){\n    return (\n        <div className='noData'>\n            <img src={imgUrl} width=\"245\" height=\"201\" alt=\"\" />\n            <div>没有数据orz</div>\n        </div>\n    )\n}","// This file is generated automatically by `useTemplate.ts`. DO NOT EDIT IT.\n\nimport { createElement, forwardRef, Ref } from 'react';\nimport { IconBase, IconProps } from '../icon';\n\nimport '../style/css';\n\nconst element = {\"tag\":\"svg\",\"attrs\":{\"fill\":\"none\",\"viewBox\":\"0 0 16 16\",\"width\":\"1em\",\"height\":\"1em\"},\"children\":[{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M9.51 10.22a4.76 4.76 0 11.7-.7l3.54 3.52-.7.71-3.54-3.53zm.77-3.7a3.76 3.76 0 10-7.53 0 3.76 3.76 0 007.53 0z\",\"fillOpacity\":0.9}}]};\n\nconst SearchIcon = forwardRef<SVGElement, IconProps>((props: IconProps, ref: Ref<SVGElement>) => createElement(\n  IconBase,\n  {\n    ...props,\n    id: 'search',\n    ref,\n    icon: element,\n  },\n));\n\nSearchIcon.displayName = 'SearchIcon';\n\nexport default SearchIcon;\n","import { useEffect, useState } from \"react\";\nimport { Input, InputValue } from \"tdesign-react\";\nimport { SearchIcon } from \"tdesign-icons-react\";\nexport type searchConfType = {\n  label: string;  // 搜索的标题文案\n  key: string;    // key值   \n  value: string;  // 搜索关键字 - 初始化\n  callback: Function; // 搜索回调\n  setValue?: Function; // 输入onChange回调\n};\n// 搜索组件\nexport function Search(props: any) {\n  const data = props.searchConf;\n  const [params, setParams] = useState({});\n  let initValue: any = {};\n\n  useEffect(() => {\n    data.forEach((el: searchConfType) => {\n      initValue[el.key] = el.value !== \"\" ? el.value : undefined;\n    });\n    setParams(initValue);\n  }, [data]);\n\n  return (\n    <div className=\"searchCont\">\n      {data.map((item: searchConfType, index: number) => (\n        <div className=\"searchitem\" key={index}>\n          <div className=\"label\">{item.label}</div>\n          <Input\n            placeholder=\"请输入\"\n            value={(params as any)[item.key]}\n            type=\"text\"\n            onEnter={() => {\n              item.callback(params);\n            }}\n            onChange={(value: InputValue) => {\n              const par: any = {};\n              par[item.key] = value;\n              if (item.setValue) {\n                item.setValue!({ ...params, ...par });\n              }\n              setParams({ ...params, ...par });\n            }}\n          />\n          <SearchIcon\n            className=\"searchIcon\"\n            name=\"search\"\n            size=\"medium\"\n            onClick={() => {\n              item.callback(params);\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Search, searchConfType } from \"./../../components/Search\";\nimport { Table, Dialog, Button, Radio, MessagePlugin } from \"tdesign-react\";\nimport { ErrorCircleFilledIcon } from \"tdesign-icons-react\";\nimport { timeFormat } from \"../../utils/tool\";\nimport { apiTraceList, apiDeleteTrace } from \"../../api/api\";\nimport NoData from \"../../components/NoData\";\nimport moment from \"moment\";\n\nfunction Trajectory(props: any) {\n  const [visible, setVisible] = useState(false);\n  const [tracePage, setTracePage] = useState(1);\n  const [tracePageSize, setTracePageSize] = useState(10);\n  const [traceData, setTraceData] = useState([]);\n  const [traceTotal, setTraceTotal] = useState(30);\n  const [deleteDish, setDeleteDish] = useState(\"\");\n  const [provider, setProvider] = useState(\"BAIDU\");\n  const [searchValue, setSearchValue] = useState({});\n  const searchConf: searchConfType[] = [\n    {\n      label: \"轨迹名称:\",\n      value: \"\",\n      key: \"traceName\",\n      callback: searchHandle,\n      setValue: setSearchValue,\n    },\n    {\n      label: \"轨迹ID:\",\n      value: \"\",\n      key: \"traceId\",\n      callback: searchHandle,\n      setValue: setSearchValue,\n    },\n  ];\n  // 生命周期调用数据\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // 搜索功能\n  function searchHandle(searchVal: any) {\n    setTracePage(1);\n    setTracePageSize(10);\n    setSearchValue(searchVal);\n    getData({ terminalPage: 1, terminalPageSize: 10, ...searchVal });\n  }\n\n  // 获取数据\n  function getData(items?: any) {\n    apiTraceList({\n      page: items?.tracePage ?? tracePage,\n      pageSize: items?.tracePageSize ?? tracePageSize,\n      traceName: items?.traceName,\n      traceId: items?.traceId,\n      provider: items?.provider ?? provider,\n    }).then((res: any) => {\n      const { data } = res;\n      if (res.code === 0) {\n        setTraceData(data.items);\n        setTraceTotal(data.total);\n      } else {\n        MessagePlugin.error(res.msg ?? \"请求出错！\");\n      }\n    });\n  }\n  // 删除功能\n  const deleteHandle = () => {\n    if (deleteDish) {\n      apiDeleteTrace({id:deleteDish,provider});\n      setDeleteDish(\"\");\n      setVisible(false);\n      getData({ ...searchValue });\n    } else {\n      MessagePlugin.error(\"删除请求出错了\");\n    }\n  };\n  // 关闭弹框\n  const handleFooterClose = () => {\n    setVisible(false);\n  };\n\n  // 更改单选类型 - 不同服务商切换\n  const changeHandle = (val: any) => {\n    setProvider(val);\n    getData({ ...searchValue, provider: val });\n  };\n\n  return (\n    <div className=\"container trajectory\">\n      <div className=\"searchCont\">\n        <Search searchConf={searchConf}></Search>\n        <div className=\"tdesign-demo-block-row\">\n          <Radio.Group value={provider} onChange={changeHandle}>\n            <Radio value=\"BAIDU\">百度地图</Radio>\n            <Radio value=\"AMAP\">高德地图</Radio>\n            {/* <Radio value=\"TMAP\">腾讯地图</Radio> */}\n          </Radio.Group>\n        </div>\n      </div>\n      <div className=\"tableCont\">\n        {traceData && traceData.length > 0 ? (\n          <Table\n            data={traceData}\n            columns={[\n              {\n                align: \"left\",\n                className: \"test\",\n                ellipsis: true,\n                colKey: \"name\",\n                title: \"轨迹名称\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"terminalId\",\n                title: \"轨迹ID\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                cell({ row }) {\n                  switch (row?.provider) {\n                    case \"BAIDU\":\n                      return <>百度地图</>;\n                    case \"AMAP\":\n                      return <>高德地图</>;\n                    case \"QQ\":\n                      return <>腾讯地图</>;\n                    default:\n                      return null;\n                  }\n                },\n                title: \"服务商名称\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"serverId\",\n                title: \"服务ID\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"distance\",\n                title: \"轨迹长度\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"time\",\n                cell({ row }) {\n                  return timeFormat(row.time);\n                },\n                title: \"持续时间\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"startTime\",\n                cell({ row }) {\n                  return row.startTime\n                    ? moment(row.startTime).format(\"YYYY-MM-DD HH:mm:ss\")\n                    : \"--\";\n                },\n                title: \"创建时间\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"endTime\",\n                cell({ row }) {\n                  return row.endTime\n                    ? moment(row.endTime).format(\"YYYY-MM-DD HH:mm:ss\")\n                    : \"--\";\n                },\n                title: \"结束时间\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"size\",\n                title: \"轨迹点数\",\n                minWidth: 200,\n              },\n              {\n                colKey: \"op\",\n                width: 140,\n                title: \"操作\",\n                fixed: \"right\",\n                cell(record: any) {\n                  return (\n                    <>\n                      <a\n                        className=\"link\"\n                        onClick={() => {\n                          props.history.push({\n                            pathname: `/trajectory/${record.row.id}`,\n                            state: record.row,\n                          });\n                        }}\n                      >\n                        查看\n                      </a>\n                      <a\n                        className=\"link\"\n                        onClick={() => {\n                          setDeleteDish(record.row.traceId);\n                          setVisible(true);\n                        }}\n                      >\n                        删除\n                      </a>\n                    </>\n                  );\n                },\n              },\n            ]}\n            rowKey=\"index\"\n            verticalAlign=\"top\"\n            bordered\n            hover\n            pagination={{\n              defaultCurrent: tracePage,\n              defaultPageSize: tracePageSize,\n              total: traceTotal,\n              showJumper: true,\n              onChange(pageInfo) {\n                setTracePageSize(pageInfo.pageSize);\n                setTracePage(pageInfo.current);\n                getData();\n              },\n            }}\n          ></Table>\n        ) : (\n          <NoData />\n        )}\n      </div>\n      <Dialog\n        header={\n          <>\n            <ErrorCircleFilledIcon style={{ color: \"#ED7B2F\" }} />\n            <span>确定要删除这条轨迹吗？</span>\n          </>\n        }\n        footer={\n          <>\n            <Button\n              theme=\"default\"\n              variant=\"outline\"\n              onClick={() => setVisible(false)}\n            >\n              取消\n            </Button>\n            <Button theme=\"danger\" onClick={() => deleteHandle()}>\n              删除\n            </Button>\n          </>\n        }\n        visible={visible}\n        onClose={handleFooterClose}\n      ></Dialog>\n    </div>\n  );\n}\n\nexport default Trajectory;\n","\n// 地图路径转换 后台数据转对应数据\nexport function pathChangeHandle(type:string, path:{string:any}[]):[]{\n    let pathList:any = [];\n    if (type === 'BMAP'){\n      pathList = path.map((it:any) => ({'lng': it.longitude, 'lat': it.latitude}))\n    } else if (type === 'AMAP'){\n      pathList = path.map((it:any) => {\n        const point = it.location.split(',')\n        return {'lng':point[0], 'lat':point[1]}\n      })\n    } else if(type === 'TMAP'){\n     console.log(\"开发中...\");\n    }\n    return pathList\n  }\n// 围栏数据转换\n/**\n * 高德：\n圆形围栏数据：\n{\"center\":\"116.344132,40.061937\",\"radius\":5000}\n多边形围栏数据：\n{\"points\":\"116.341622,40.063412;116.346729,40.064546;116.347072,40.060358;116.342373,40.059553\"}\n线形围栏数据：\n{\"bufferradius\":200,\"points\":\"116.347115,40.060325;116.342909,40.05957;116.336493,40.058338\"}\n行政区围栏：\n{\"adcode\":110105}\n\n * 百度：\n圆形围栏数据：\n{\"latitude\":\"40.061937\",\"radius\":5000,\"longitude\":\"116.344132\"}\n多边形围栏数据：\n{\"vertexes\":\"40.063412,116.341622;40.064546,116.346729;40.060358,116.347072;40.059553,116.342373\"}\n线形围栏数据：\n{\"offset\":200,\"vertexes\":\"40.060325,116.347115;40.05957,116.342909;40.058338,116.336493\"}\n行政区围栏：\n{\"keyword\":\"北京市\"}\n * **/\nexport function fenceDataChange(type:string,shape:string,data:any){\n  let fenceData:any = {}\n  // 高德地图 圆形围栏\n  if (type === 'AMAP' && shape === 'CIRCLE'){\n    fenceData.point = data.center.split(',')\n    fenceData.radius = data.radius\n    fenceData.type = 'circle'\n  // 高德地图 多边形围栏\n  } else if ((type === 'AMAP' && shape === 'POLYGON') ){\n    fenceData.type = 'polygon'\n    const dataArray = data.points.split(';')\n    fenceData.points = dataArray.length > 0 && dataArray.map((it:string) => {\n      const point = it.split(',')\n      return {lng:point[0], lat: point[1]}\n    })\n    // 高德地图 线性形围栏\n  } else if(type === 'AMAP' && shape === 'POLYLINE'){\n    fenceData.type = 'polyline'\n    const dataArray = data.points.split(';')\n    fenceData.offset = data.bufferradius\n    fenceData.points = dataArray.length > 0 && dataArray.map((it:string) => {\n      const point = it.split(',')\n      return {lng:point[0], lat: point[1]}\n    })\n    // 高德地图 行政区域围栏\n  } else if(type === 'AMAP' && shape === 'DISTRICT'){\n    fenceData.type = 'district'\n    fenceData.adcodes = [data.adcode]\n    // 百度地图 圆形围栏\n  } else if (type === 'BMAP' && shape === 'CIRCLE'){\n    fenceData.point = [data.longitude, data.latitude]\n    fenceData.radius = data.radius\n    fenceData.type = 'circle'\n    // 百度地图 多边形围栏\n  } else if ((type === 'BMAP' && shape === 'POLYGON')){\n    fenceData.type = 'polygon'\n    const dataArray = data.vertexes.split(';')\n    fenceData.points = dataArray.length > 0 && dataArray.map((it:string) => {\n      const point = it.split(',')\n      return {lng:point[1], lat: point[0]}\n    })\n    // 百度地图 线性形围栏\n  } else if (type === 'BMAP' && shape === 'POLYLINE'){\n    fenceData.type = 'polyline'\n    fenceData.offset = data.offset\n    const dataArray = data.vertexes.split(';')\n    fenceData.points = dataArray.length > 0 && dataArray.map((it:string) => {\n      const point = it.split(',')\n      return {lng:point[1], lat: point[0]}\n    })\n    // 百度地图 行政区域形围栏\n  } else if (type === 'BMAP' && shape === 'DISTRICT'){\n    fenceData.type = 'district'\n    fenceData.proname = data.keyword\n  }\n\n  return fenceData\n}\n// 安毫秒转换为时、（h）、分(m)、秒(s)\nexport function timeFormat(data:string | number):string{\n    let time:string = '--';\n    if (data && data < 60000){\n      time = Number(data)/1000 + 's'\n    }  \n    if (data && data >= 60000 && data < 3600000) {\n      time = Number(data)/60000 + 'm'\n    }\n    if (data && data > 3600000) {\n      time = Number(data)/3600000 + 'H'\n    }\n    return time;\n}"],"names":["request","options","axios","apiUserLogin","data","method","url","params","apiSysConfig","apiTraceServer","apiTraceList","apiDeleteTrace","id","apiFenceList","apiDeleteFence","fenceId","apiTerminal","apiDeleteTerminalld","config","token","getToken","headers","Authorization","error","Promise","reject","response","status","removeToken","window","location","href","MessagePlugin","msg","Error","resolve","message","nodata","className","src","imgUrl","width","height","alt","element","SearchIcon","forwardRef","props","ref","createElement","IconBase","icon","displayName","Search","searchConf","useState","setParams","initValue","useEffect","forEach","el","key","value","undefined","map","item","index","label","I","placeholder","type","onEnter","callback","onChange","par","setValue","name","size","onClick","visible","setVisible","tracePage","setTracePage","tracePageSize","setTracePageSize","traceData","setTraceData","traceTotal","setTraceTotal","deleteDish","setDeleteDish","provider","setProvider","searchValue","setSearchValue","searchHandle","searchVal","getData","terminalPage","terminalPageSize","items","page","pageSize","traceName","traceId","then","res","code","total","val","length","columns","align","ellipsis","colKey","title","minWidth","cell","row","timeFormat","time","startTime","moment","format","endTime","fixed","record","history","push","pathname","state","rowKey","verticalAlign","bordered","hover","pagination","defaultCurrent","defaultPageSize","showJumper","pageInfo","current","header","style","color","footer","theme","variant","onClose","pathChangeHandle","path","pathList","it","longitude","latitude","point","split","console","log","fenceDataChange","shape","fenceData","center","radius","dataArray","points","lng","lat","offset","bufferradius","adcodes","adcode","vertexes","proname","keyword","Number"],"sourceRoot":""}
{"version":3,"file":"static/js/931.b27b2c7b.chunk.js","mappings":"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","sources":["utils/request.ts","api/api.ts","components/NoData.tsx","../node_modules/tdesign-icons-react/src/components/search.tsx","components/Search.tsx","pages/fence/index.tsx"],"sourcesContent":["import axios, { AxiosRequestConfig, AxiosError, AxiosResponse } from 'axios';\nimport { MessagePlugin } from 'tdesign-react';\nimport { getToken, removeToken } from '../utils/cookie';\n\ninterface ResponseData<T> {\n  code: number;\n  data: T;\n  msg: string;\n}\n\n// 指定 axios 请求类型\n(axios.defaults.headers as any) = {\n  'Content-Type': 'application/json;charset=utf-8',\n};\n\n// 指定请求地址\naxios.defaults.baseURL = '' // : 'https://mock.boxuegu.com/mock/2894/';\n\n// 添加请求拦截器\naxios.interceptors.request.use(\n  (config: AxiosRequestConfig ) => {\n    const token = getToken();\n    // 获取用户token，用于校验\n    /* eslint-disable  no-param-reassign */\n    if (token) {\n      (config.headers as any).Authorization = token;\n    }\n    return config;\n  },\n  (error: AxiosError) => Promise.reject(error),\n);\n\n// 添加响应拦截器，拦截登录过期或者没有权限\n\naxios.interceptors.response.use(\n  (response: AxiosResponse<ResponseData<any>>) => {\n    if (!response.data) {\n      return Promise.resolve(response);\n    }\n    // 请求成功\n    if (response.status === 200) {\n      return response.data as any;\n    }\n    // token 超时 失效\n    if (response.status === 401 || response.data.code === 401) {\n      removeToken()\n      window.location.href = '/login'\n    }\n\n    // 请求成功，状态不为成功时\n    MessagePlugin.error(response.data.msg);\n\n    return Promise.reject(new Error(response.data.msg));\n  },\n  (error: AxiosError) => {\n    MessagePlugin.error(error.message);\n    const status = error.response!.status\n    if (status === 401) {\n      removeToken()\n      window.location.href = '/login'\n    } else {\n      return Promise.reject(error);\n    }\n  },\n);\n\n// 统一发起请求的函数\nexport function request<T>(options: AxiosRequestConfig) {\n  return axios.request<T>(options);\n}\n","import { request } from '../utils/request';\n// import { UserState } from '../store/module/user';\n\nexport interface UserLoginDataRq  {\n  code: number,\n  msg: string,\n  data: {\n    token: string\n  }\n}\n\nexport interface UserLoginData {\n  userName: string;\n  password: string;\n}\n\n// 登录接口\nexport function apiUserLogin(data: UserLoginData) {\n  return request<UserLoginDataRq>({\n    method: 'POST',\n    url: '/sys/login',\n    data,\n    params:data,\n  });\n}\n\n// 系统配置\nexport function apiSysConfig() {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/config',\n  });\n}\n\n// 轨迹服务管理\nexport function apiTraceServer(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/trace/server',\n    data,\n    params:data,\n  });\n}\n\n// 轨迹列表\nexport function apiTraceList(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/trace',\n    data,\n    params:data,\n  });\n}\n\n// 删除轨迹\nexport function apiDeleteTrace(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/trace/${data.id}`,\n    data,\n    params:data,\n  });\n}\n\n// 电子围栏列表\nexport function apiFenceList(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/fence',\n    data,\n    params:data,\n  });\n}\n\n// 电子围栏列表详情\nexport function apiFenceDetails(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: `/sys/fence/${data.fenceId}`,\n    data,\n  });\n}\n// 删除电子围栏\nexport function apiDeleteFence(data:any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/fence/${data.fenceId}`,\n    data,\n    params:data\n  });\n}\n// 终端列表\nexport function apiTerminal(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/terminal',\n    data,\n    params:data,\n  });\n}\n\n// 删除终端\nexport function apiDeleteTerminalld(data:any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/terminal/${data.id}`,\n    data,\n    params:data\n  });\n}","import imgUrl from './../assets/images/nodata.png'\nexport default function nodata(){\n    return (\n        <div className='noData'>\n            <img src={imgUrl} width=\"245\" height=\"201\" alt=\"\" />\n            <div>没有数据orz</div>\n        </div>\n    )\n}","// This file is generated automatically by `useTemplate.ts`. DO NOT EDIT IT.\n\nimport { createElement, forwardRef, Ref } from 'react';\nimport { IconBase, IconProps } from '../icon';\n\nimport '../style/css';\n\nconst element = {\"tag\":\"svg\",\"attrs\":{\"fill\":\"none\",\"viewBox\":\"0 0 16 16\",\"width\":\"1em\",\"height\":\"1em\"},\"children\":[{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M9.51 10.22a4.76 4.76 0 11.7-.7l3.54 3.52-.7.71-3.54-3.53zm.77-3.7a3.76 3.76 0 10-7.53 0 3.76 3.76 0 007.53 0z\",\"fillOpacity\":0.9}}]};\n\nconst SearchIcon = forwardRef<SVGElement, IconProps>((props: IconProps, ref: Ref<SVGElement>) => createElement(\n  IconBase,\n  {\n    ...props,\n    id: 'search',\n    ref,\n    icon: element,\n  },\n));\n\nSearchIcon.displayName = 'SearchIcon';\n\nexport default SearchIcon;\n","import { useEffect, useState } from \"react\";\nimport { Input, InputValue } from \"tdesign-react\";\nimport { SearchIcon } from \"tdesign-icons-react\";\nexport type searchConfType = {\n  label: string;  // 搜索的标题文案\n  key: string;    // key值   \n  value: string;  // 搜索关键字 - 初始化\n  callback: Function; // 搜索回调\n  setValue?: Function; // 输入onChange回调\n};\n// 搜索组件\nexport function Search(props: any) {\n  const data = props.searchConf;\n  const [params, setParams] = useState({});\n  let initValue: any = {};\n\n  useEffect(() => {\n    data.forEach((el: searchConfType) => {\n      initValue[el.key] = el.value !== \"\" ? el.value : undefined;\n    });\n    setParams(initValue);\n    console.log(3333)\n  }, []);\n\n  return (\n    <div className=\"searchCont\">\n      {data.map((item: searchConfType, index: number) => (\n        <div className=\"searchitem\" key={index}>\n          <div className=\"label\">{item.label}</div>\n          <Input\n            placeholder=\"请输入\"\n            value={(params as any)[item.key]}\n            type=\"text\"\n            onEnter={() => {\n              item.callback(params);\n            }}\n            onChange={(value: InputValue) => {\n              const par: any = {};\n              par[item.key] = value;\n              setParams({ ...params, ...par });\n              if (item.setValue) {\n                item.setValue!({ ...params, ...par });\n              }         \n            }}\n          />\n          <SearchIcon\n            className=\"searchIcon\"\n            name=\"search\"\n            size=\"medium\"\n            onClick={() => {\n              item.callback(params);\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n","import { Search, searchConfType } from \"../../components/Search\";\nimport { useState, useEffect } from \"react\";\nimport { Table, Dialog, Button, Radio, MessagePlugin } from \"tdesign-react\";\nimport { ErrorCircleFilledIcon } from \"tdesign-icons-react\";\nimport { apiFenceList, apiDeleteFence } from \"../../api/api\";\nimport NoData from \"../../components/NoData\";\nimport moment from \"moment\";\n\ntype trajectoryData = {\n  name: string;\n  id: string;\n  serverName: string;\n  serverId: string;\n  trajectoryLength: string;\n  time: string;\n  createTime: string;\n}[];\n\nfunction Fence(props: any) {\n  const [visible, setVisible] = useState(false);\n  const [page, setPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [Data, setData] = useState([]);\n  const [total, setTotal] = useState(30);\n  const [deleteDish, setDeleteDish] = useState({});\n  const [provider, setProvider] = useState(\"BAIDU\");\n  const [searchValue, setSearchValue] = useState({});\n  const searchConf: searchConfType[] = [\n    {\n      label: \"围栏名称:\",\n      key: \"fenceName\",\n      value: \"\",\n      callback: searchHandle,\n      setValue: setSearchValue,\n    },\n    {\n      label: \"围栏ID:\",\n      key: \"fenceId\",\n      value: \"\",\n      callback: searchHandle,\n      setValue: setSearchValue,\n    },\n  ];\n\n  // 生命周期调用数据\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // 获取数据\n  function getData(items?: any) {\n    apiFenceList({\n      page: items?.page ?? page,\n      pageSize: items?.pageSize ?? pageSize,\n      fenceName: items?.fenceName,\n      fenceId: items?.fenceId,\n      provider: items?.provider ?? provider,\n    }).then((res: any) => {\n      const { data } = res;\n      if (res.code === 0) {\n        setData(data.items);\n        setTotal(data.total);\n      } else {\n        MessagePlugin.error(\"请求出错！\");\n      }\n    });\n  }\n\n  // 搜索功能\n  function searchHandle(searchVal: any) {\n    setPage(1);\n    setPageSize(10);\n    setSearchValue(searchVal);\n    getData({ page: 1, pageSize: 10, ...searchVal });\n  }\n  // 关闭弹框\n  const handleFooterClose = () => {\n    setVisible(false);\n  };\n\n  // 删除功能\n  const deleteHandle = () => {\n    if (deleteDish && (deleteDish as any).fenceId) {\n      const {fenceId, serverId} = deleteDish as any\n      apiDeleteFence({fenceId,serverId, provider}).then(res => {\n        if ((res as any).code == 0){\n          setDeleteDish({});\n          setVisible(false);\n          MessagePlugin.success('信息删除成功！');\n          getData({ ...searchValue, provider })\n        } else {\n          MessagePlugin.error((res as any).msg);\n        }\n      })   \n    } else {\n      MessagePlugin.error(\"删除请求出错了\");\n    }\n  };\n  // 更改单选类型 - 不同服务商切换\n  const changeHandle = (val: any) => {\n    setProvider(val);\n    getData({ ...searchValue, provider: val });\n  };\n  return (\n    <div className=\"container fence\">\n      <div className=\"searchCont\">\n        <Search searchConf={searchConf}></Search>\n        <div className=\"tdesign-demo-block-row\">\n          <Radio.Group value={provider} onChange={changeHandle}>\n            <Radio value=\"BAIDU\">百度地图</Radio>\n            <Radio value=\"AMAP\">高德地图</Radio>\n            {/* <Radio value=\"TMAP\">腾讯地图</Radio> */}\n          </Radio.Group>\n        </div>\n      </div>\n      <div className=\"tableCont\">\n        {Data && Data.length > 0 ? (\n          <Table\n            data={Data}\n            columns={[\n              {\n                align: \"left\",\n                className: \"test\",\n                ellipsis: true,\n                colKey: \"name\",\n                title: \"围栏名称\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"fenceId\",\n                title: \"围栏ID\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                cell({ row }) {\n                  switch (row?.type) {\n                    case \"DISTRICT\":\n                      return <>行政区域</>;\n                    case \"CIRCLE\":\n                      return <>圆形</>;\n                    case \"POLYGON\":\n                      return <>多边型</>;\n                    case \"POLYLINE\":\n                      return <>线形</>;\n                    default:\n                      return null;\n                  }\n                },\n                title: \"围栏类型\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                cell({ row }) {\n                  switch (row?.provider) {\n                    case \"BAIDU\":\n                      return <>百度地图</>;\n                    case \"AMAP\":\n                      return <>高德地图</>;\n                    case \"QQ\":\n                      return <>腾讯地图</>;\n                    default:\n                      return null;\n                  }\n                },\n                title: \"服务商\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"serverId\",\n                title: \"服务ID\",\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"created\",\n                title: \"创建时间\",\n                cell({ row }) {\n                  return moment(row.created).format(\"YYYY-MM-DD HH:mm:ss\");\n                },\n                minWidth: 200,\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"updated\",\n                cell({ row }) {\n                  return moment(row.updated).format(\"YYYY-MM-DD HH:mm:ss\");\n                },\n                title: \"更新时间\",\n                minWidth: 200,\n              },\n              {\n                colKey: \"op\",\n                width: 140,\n                title: \"操作\",\n                fixed: \"right\",\n                cell(record) {\n                  return (\n                    <>\n                      <a\n                        className=\"link\"\n                        onClick={() => {\n                          props.history.push({\n                            pathname: `/fence/${record.row.id}`,\n                            state: record.row,\n                          });\n                        }}\n                      >\n                        查看\n                      </a>\n                      <a\n                        className=\"link\"\n                        onClick={() => {\n                          setDeleteDish(record.row);\n                          setVisible(true);\n                        }}\n                      >\n                        删除\n                      </a>\n                    </>\n                  );\n                },\n              },\n            ]}\n            rowKey=\"index\"\n            verticalAlign=\"top\"\n            bordered\n            hover\n            pagination={{\n              defaultCurrent: page,\n              defaultPageSize: pageSize,\n              total,\n              showJumper: true,\n              onChange(pageInfo) {\n                setPageSize(pageInfo.pageSize);\n                setPage(pageInfo.current);\n                getData();\n              },\n            }}\n          ></Table>\n        ) : (\n          <NoData />\n        )}\n      </div>\n      <Dialog\n        header={\n          <>\n            <ErrorCircleFilledIcon style={{ color: \"#ED7B2F\" }} />\n            <span>确定要删除这条围栏信息吗？</span>\n          </>\n        }\n        footer={\n          <>\n            <Button\n              theme=\"default\"\n              variant=\"outline\"\n              onClick={() => setVisible(false)}\n            >\n              取消\n            </Button>\n            <Button theme=\"danger\" onClick={deleteHandle}>\n              删除\n            </Button>\n          </>\n        }\n        visible={visible}\n        onClose={handleFooterClose}\n      ></Dialog>\n    </div>\n  );\n}\n\nexport default Fence;\n"],"names":["request","options","axios","apiUserLogin","data","method","url","params","apiSysConfig","apiTraceServer","apiTraceList","apiDeleteTrace","id","apiFenceList","apiDeleteFence","fenceId","apiTerminal","apiDeleteTerminalld","config","token","getToken","headers","Authorization","error","Promise","reject","response","status","code","removeToken","window","location","href","MessagePlugin","msg","Error","resolve","message","nodata","className","src","imgUrl","width","height","alt","element","SearchIcon","forwardRef","props","ref","createElement","IconBase","icon","displayName","Search","searchConf","useState","setParams","initValue","useEffect","forEach","el","key","value","undefined","console","log","map","item","index","label","I","placeholder","type","onEnter","callback","onChange","par","setValue","name","size","onClick","visible","setVisible","page","setPage","pageSize","setPageSize","Data","setData","total","setTotal","deleteDish","setDeleteDish","provider","setProvider","searchValue","setSearchValue","searchHandle","getData","items","fenceName","then","res","searchVal","val","length","columns","align","ellipsis","colKey","title","minWidth","cell","row","moment","created","format","updated","fixed","record","history","push","pathname","state","rowKey","verticalAlign","bordered","hover","pagination","defaultCurrent","defaultPageSize","showJumper","pageInfo","current","header","style","color","footer","theme","variant","serverId","onClose"],"sourceRoot":""}
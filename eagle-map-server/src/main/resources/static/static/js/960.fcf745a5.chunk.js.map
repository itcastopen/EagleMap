{"version":3,"file":"static/js/960.fcf745a5.chunk.js","mappings":"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","sources":["utils/request.ts","api/api.ts","components/NoData.tsx","../node_modules/tdesign-icons-react/src/components/search.tsx","components/Search.tsx","pages/server/details.tsx","../node_modules/tdesign-react/src/breadcrumb/BreadcrumbContext.tsx","../node_modules/tdesign-react/src/breadcrumb/BreadcrumbItem.tsx","../node_modules/tdesign-react/src/breadcrumb/Breadcrumb.tsx","../node_modules/tdesign-react/src/breadcrumb/index.ts"],"sourcesContent":["import axios, { AxiosRequestConfig, AxiosError, AxiosResponse } from 'axios';\nimport { MessagePlugin } from 'tdesign-react';\nimport { getToken, removeToken } from '../utils/cookie';\n\ninterface ResponseData<T> {\n  code: number;\n  data: T;\n  msg: string;\n}\n\n// 指定 axios 请求类型\n(axios.defaults.headers as any) = {\n  'Content-Type': 'application/json;charset=utf-8',\n};\n\n// 指定请求地址\naxios.defaults.baseURL = '' // : 'https://mock.boxuegu.com/mock/2894/';\n\n// 添加请求拦截器\naxios.interceptors.request.use(\n  (config: AxiosRequestConfig ) => {\n    const token = getToken();\n    // 获取用户token，用于校验\n    /* eslint-disable  no-param-reassign */\n    if (token) {\n      (config.headers as any).Authorization = token;\n    }\n    return config;\n  },\n  (error: AxiosError) => Promise.reject(error),\n);\n\n// 添加响应拦截器，拦截登录过期或者没有权限\n\naxios.interceptors.response.use(\n  (response: AxiosResponse<ResponseData<any>>) => {\n    if (!response.data) {\n      return Promise.resolve(response);\n    }\n\n    // 请求成功\n    if (response.status === 200) {\n      return response.data as any;\n    }\n    // token 超时 失效\n    if (response.status === 401) {\n      removeToken()\n      window.location.href = '/login'\n    }\n\n    // 请求成功，状态不为成功时\n    MessagePlugin.error(response.data.msg);\n\n    return Promise.reject(new Error(response.data.msg));\n  },\n  (error: AxiosError) => {\n    MessagePlugin.error(error.message);\n\n    return Promise.reject(error);\n  },\n);\n\n// 统一发起请求的函数\nexport function request<T>(options: AxiosRequestConfig) {\n  return axios.request<T>(options);\n}\n","import { request } from '../utils/request';\n// import { UserState } from '../store/module/user';\n\nexport interface UserLoginDataRq  {\n  code: number,\n  msg: string,\n  data: {\n    token: string\n  }\n}\n\nexport interface UserLoginData {\n  userName: string;\n  password: string;\n}\n\n// 登录接口\nexport function apiUserLogin(data: UserLoginData) {\n  return request<UserLoginDataRq>({\n    method: 'POST',\n    url: '/sys/login',\n    data,\n    params:data,\n  });\n}\n\n// 系统配置\nexport function apiSysConfig() {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/config',\n  });\n}\n\n// 轨迹服务管理\nexport function apiTraceServer(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/trace/server',\n    data,\n    params:data,\n  });\n}\n\n// 轨迹列表\nexport function apiTraceList(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/trace',\n    data,\n    params:data,\n  });\n}\n\n// 删除轨迹\nexport function apiDeleteTrace(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/trace/${data.id}`,\n    data,\n    params:data,\n  });\n}\n\n// 电子围栏列表\nexport function apiFenceList(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/fence',\n    data,\n    params:data,\n  });\n}\n\n// 电子围栏列表详情\nexport function apiFenceDetails(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: `/sys/fence/${data.fenceId}`,\n    data,\n  });\n}\n// 删除电子围栏\nexport function apiDeleteFence(data:any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/fence/${data.fenceId}`,\n    data,\n  });\n}\n// 终端列表\nexport function apiTerminal(data: any) {\n  return request<UserLoginDataRq>({\n    method: 'GET',\n    url: '/sys/terminal',\n    data,\n    params:data,\n  });\n}\n\n// 删除终端\nexport function apiDeleteTerminalld(data:any) {\n  return request<UserLoginDataRq>({\n    method: 'DELETE',\n    url: `/sys/terminal/${data.id}`,\n    data,\n  });\n}","import imgUrl from './../assets/images/nodata.png'\nexport default function nodata(){\n    return (\n        <div className='noData'>\n            <img src={imgUrl} width=\"245\" height=\"201\" alt=\"\" />\n            <div>没有数据orz</div>\n        </div>\n    )\n}","// This file is generated automatically by `useTemplate.ts`. DO NOT EDIT IT.\n\nimport { createElement, forwardRef, Ref } from 'react';\nimport { IconBase, IconProps } from '../icon';\n\nimport '../style/css';\n\nconst element = {\"tag\":\"svg\",\"attrs\":{\"fill\":\"none\",\"viewBox\":\"0 0 16 16\",\"width\":\"1em\",\"height\":\"1em\"},\"children\":[{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M9.51 10.22a4.76 4.76 0 11.7-.7l3.54 3.52-.7.71-3.54-3.53zm.77-3.7a3.76 3.76 0 10-7.53 0 3.76 3.76 0 007.53 0z\",\"fillOpacity\":0.9}}]};\n\nconst SearchIcon = forwardRef<SVGElement, IconProps>((props: IconProps, ref: Ref<SVGElement>) => createElement(\n  IconBase,\n  {\n    ...props,\n    id: 'search',\n    ref,\n    icon: element,\n  },\n));\n\nSearchIcon.displayName = 'SearchIcon';\n\nexport default SearchIcon;\n","import { useEffect, useState } from \"react\";\nimport { Input, InputValue } from \"tdesign-react\";\nimport { SearchIcon } from \"tdesign-icons-react\";\nexport type searchConfType = {\n  label: string;  // 搜索的标题文案\n  key: string;    // key值   \n  value: string;  // 搜索关键字 - 初始化\n  callback: Function; // 搜索回调\n  setValue?: Function; // 输入onChange回调\n};\n// 搜索组件\nexport function Search(props: any) {\n  const data = props.searchConf;\n  const [params, setParams] = useState({});\n  let initValue: any = {};\n\n  useEffect(() => {\n    data.forEach((el: searchConfType) => {\n      initValue[el.key] = el.value !== \"\" ? el.value : undefined;\n    });\n    setParams(initValue);\n  }, [data]);\n\n  return (\n    <div className=\"searchCont\">\n      {data.map((item: searchConfType, index: number) => (\n        <div className=\"searchitem\" key={index}>\n          <div className=\"label\">{item.label}</div>\n          <Input\n            placeholder=\"请输入\"\n            value={(params as any)[item.key]}\n            type=\"text\"\n            onEnter={() => {\n              item.callback(params);\n            }}\n            onChange={(value: InputValue) => {\n              const par: any = {};\n              par[item.key] = value;\n              if (item.setValue) {\n                item.setValue!({ ...params, ...par });\n              }\n              setParams({ ...params, ...par });\n            }}\n          />\n          <SearchIcon\n            className=\"searchIcon\"\n            name=\"search\"\n            size=\"medium\"\n            onClick={() => {\n              item.callback(params);\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Table, Dialog, Button, MessagePlugin, Radio } from \"tdesign-react\";\nimport { apiTerminal, apiDeleteTerminalld } from \"../../api/api\";\nimport { Search, searchConfType } from \"../../components/Search\";\nimport { ErrorCircleFilledIcon } from \"tdesign-icons-react\";\nimport NoData from \"../../components/NoData\";\nimport { Breadcrumb } from \"tdesign-react\";\nimport moment from \"moment\";\nconst { BreadcrumbItem } = Breadcrumb;\n\nfunction Terminal(props: any) {\n  const [terminalPage, setTerminalPage] = useState(1);\n  const [terminalPageSize, setTerminalPageSize] = useState(10);\n  const [terminalData, setTerminalData] = useState([]);\n  const [terminalTotal, setTerminalTotal] = useState(30);\n  const [visible, setVisible] = useState(false);\n  const [deleteDish, setDeleteDish] = useState(\"\");\n  const [provider, setProvider] = useState(\"BAIDU\");\n  const [searchValue, setSearchValue] = useState({});\n\n  // 搜索数据定义\n  const searchConf: searchConfType[] = [\n    {\n      label: \"设备名称:\",\n      key: \"terminalName\",\n      value: \"\",\n      callback: searchHandle,\n      setValue: setSearchValue,\n    },\n    {\n      label: \"设备ID:\",\n      key: \"terminalId\",\n      value: \"\",\n      callback: searchHandle,\n      setValue: setSearchValue,\n    },\n  ];\n\n  // 生命周期调用数据\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // 获取数据\n  const getData = (items?: any) => {\n    const serverId = props.match.params.id;\n    if (!serverId) {\n      return false;\n    }\n    apiTerminal({\n      page: items?.terminalPage ?? terminalPage,\n      pageSize: items?.terminalPageSize ?? terminalPageSize,\n      terminalName: items?.terminalName,\n      terminalId: items?.terminalId,\n      serverId,\n      provider: items?.provider ?? provider,\n    }).then((res: any) => {\n      const { data } = res;\n      if (res.code === 0) {\n        setTerminalData(data.items);\n        setTerminalTotal(data.total);\n      } else {\n        MessagePlugin.error(res.msg ?? \"请求出错！\");\n      }\n    });\n  };\n\n  // 搜索功能\n  function searchHandle(searchVal: any) {\n    setTerminalPage(1);\n    setTerminalPageSize(10);\n    getData({ setTerminalPage: 1, setTerminalPageSize: 10, ...searchVal });\n  }\n\n  // 删除功能\n  const deleteHandle = () => {\n    if (deleteDish) {\n      apiDeleteTerminalld({id:deleteDish, provider});\n      setDeleteDish(\"\");\n      setVisible(false);\n      getData({ ...searchValue, provider });\n    } else {\n      MessagePlugin.error(\"删除请求出错了\");\n    }\n  };\n\n  // 关闭弹框\n  const handleFooterClose = () => {\n    setVisible(false);\n  };\n\n  // 更改单选类型 - 不同服务商切换\n  const changeHandle = (val: any) => {\n    setProvider(val);\n    getData({ ...searchValue, provider: val });\n  };\n\n  return (\n    <>\n      <div className=\"BreadcrumbCont\">\n        <Breadcrumb maxItemWidth=\"200px\" theme=\"light\">\n          <BreadcrumbItem href=\"/server\">服务管理</BreadcrumbItem>\n          <BreadcrumbItem>设备管理</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <div className=\"container\" key=\"server\">\n        <div className=\"searchCont\">\n          <Search searchConf={searchConf}></Search>\n          <div className=\"tdesign-demo-block-row\">\n            {/* <Radio.Group value={provider} onChange={changeHandle}>\n              <Radio value=\"BAIDU\">百度地图</Radio>\n              <Radio value=\"AMAP\">高德地图</Radio>*/}\n              {/* <Radio value=\"TMAP\">腾讯地图</Radio> */}\n            {/* </Radio.Group> */}\n          </div>\n        </div>\n        {terminalData && terminalData.length > 0 ? (\n          <Table\n            data={terminalData}\n            columns={[\n              {\n                align: \"left\",\n                className: \"test\",\n                ellipsis: true,\n                colKey: \"name\",\n                title: \"设备名称\",\n              },\n              {\n                align: \"left\",\n                className: \"test\",\n                ellipsis: true,\n                colKey: \"provider\",\n                cell({ row }) {\n                  switch (row?.provider) {\n                    case \"BAIDU\":\n                      return <>百度地图</>;\n                    case \"AMAP\":\n                      return <>高德地图</>;\n                    case \"QQ\":\n                      return <>腾讯地图</>;\n                    default:\n                      return null;\n                  }\n                },\n                title: \"服务商\",\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"id\",\n                title: \"服务ID\",\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"created\",\n                cell({ row }) {\n                  return moment(row.created).format(\"YYYY-MM-DD HH:mm:ss\");\n                },\n                title: \"创建时间\",\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"updated\",\n                cell({ row }) {\n                  return moment(row.updated).format(\"YYYY-MM-DD HH:mm:ss\");\n                },\n                title: \"更新时间\",\n              },\n              {\n                align: \"left\",\n                className: \"test4\",\n                ellipsis: true,\n                colKey: \"desc\",\n                title: \"描述\",\n              },\n              {\n                colKey: \"op\",\n                width: 100,\n                title: \"操作\",\n                align: \"center\",\n                fixed: \"right\",\n                cell(record: any) {\n                  return (\n                    <>\n                      <a\n                        className=\"link\"\n                        onClick={() => {\n                          setDeleteDish(record.row.terminalId);\n                          setVisible(true);\n                        }}\n                      >\n                        删除\n                      </a>\n                    </>\n                  );\n                },\n              },\n            ]}\n            rowKey=\"index\"\n            verticalAlign=\"top\"\n            bordered\n            hover\n            pagination={{\n              defaultCurrent: terminalPage,\n              defaultPageSize: terminalPageSize,\n              total: terminalTotal,\n              showJumper: true,\n              onChange(pageInfo) {\n                setTerminalPageSize(pageInfo.pageSize);\n                setTerminalPage(pageInfo.current);\n                getData();\n              },\n            }}\n          ></Table>\n        ) : (\n          <NoData />\n        )}\n\n        <Dialog\n          header={\n            <>\n              <ErrorCircleFilledIcon style={{ color: \"#ED7B2F\" }} />\n              <span>确定要删除这条轨迹吗？</span>\n            </>\n          }\n          footer={\n            <>\n              <Button\n                theme=\"default\"\n                variant=\"outline\"\n                onClick={() => setVisible(false)}\n              >\n                取消\n              </Button>\n              <Button theme=\"danger\" onClick={() => deleteHandle()}>\n                删除\n              </Button>\n            </>\n          }\n          visible={visible}\n          onClose={handleFooterClose}\n        ></Dialog>\n      </div>\n    </>\n  );\n}\n\nexport default Terminal;\n","import { createContext } from 'react';\n\nexport interface BreadcrumbContextType {\n  maxItemWidthInContext;\n  theme: string;\n}\n\nexport const BreadcrumbContext = createContext<BreadcrumbContextType>({\n  maxItemWidthInContext: '',\n  theme: 'light',\n});\n","import React, { forwardRef, useContext, useMemo } from 'react';\nimport classNames from 'classnames';\n\nimport { ChevronRightIcon } from 'tdesign-icons-react';\nimport useConfig from '../_util/useConfig';\nimport useCommonClassName from '../_util/useCommonClassName';\n\nimport { BreadcrumbItemProps } from './BreadcrumbProps';\nimport { BreadcrumbContext } from './BreadcrumbContext';\n\nexport const BreadcrumbItem = forwardRef<HTMLDivElement, BreadcrumbItemProps>((props, ref) => {\n  const {\n    children,\n    separator = <ChevronRightIcon style={{ color: 'rgba(0,0,0,.3)' }} />,\n    disabled,\n    maxItemWidth,\n    maxWidth,\n    href,\n    to,\n    target,\n    router,\n    replace,\n    ...restProps\n  } = props;\n\n  const { maxItemWidthInContext, theme } = useContext(BreadcrumbContext);\n\n  const { classPrefix } = useConfig();\n  const commonClassNames = useCommonClassName();\n\n  const breadcrumbItemClassNames = classNames(`${classPrefix}-breadcrumb__item`);\n  const textWrapperClassName = `${classPrefix}-breadcrumb__inner`;\n  const textClassNames = classNames(`${classPrefix}-breadcrumb--text-overflow`, {\n    [commonClassNames.STATUS.disabled]: disabled,\n  });\n  const separatorClassName = `${classPrefix}-breadcrumb__separator`;\n  const linkClassName = `${classPrefix}-link`;\n\n  const maxWidthForItem = useMemo(\n    () => ({\n      maxWidth: maxWidth || maxItemWidth || maxItemWidthInContext || '120px',\n    }),\n    [maxItemWidth, maxWidth, maxItemWidthInContext],\n  );\n\n  const textContent = (\n    <span className={textWrapperClassName} style={maxWidthForItem}>\n      {children}\n    </span>\n  );\n\n  let itemContent = <span className={textClassNames}>{textContent}</span>;\n  if ((href || to) && !disabled) {\n    const handleRouting = () => {\n      if (href || !router) return;\n\n      replace ? router.replace(to) : router.push(to);\n    };\n    itemContent = (\n      <a className={classNames(textClassNames, linkClassName)} href={href} target={target} onClick={handleRouting}>\n        {textContent}\n      </a>\n    );\n  }\n\n  const separatorContent = typeof separator === 'function' ? separator() : separator;\n\n  return (\n    <div className={classNames(breadcrumbItemClassNames, theme)} ref={ref} {...restProps}>\n      {itemContent}\n      <span className={separatorClassName}>{separatorContent}</span>\n    </div>\n  );\n});\n\nBreadcrumbItem.displayName = 'BreadcrumbItem';\n","import React from 'react';\nimport useConfig from '../_util/useConfig';\nimport forwardRefWithStatics from '../_util/forwardRefWithStatics';\nimport { BreadcrumbItem } from './BreadcrumbItem';\nimport { BreadcrumbProps } from './BreadcrumbProps';\nimport { BreadcrumbContext } from './BreadcrumbContext';\n\nconst Breadcrumb = forwardRefWithStatics(\n  (props: BreadcrumbProps, ref) => {\n    const { children, options, separator, maxItemWidth, theme, ...restProps } = props;\n    const { classPrefix } = useConfig();\n\n    let content = children;\n    if (options && options.length) {\n      content = options.map((option, index) => (\n        <BreadcrumbItem\n          key={index}\n          maxWidth={option.maxWidth}\n          disabled={option.disabled}\n          href={option.href}\n          target={option.target}\n          to={option.to}\n          router={option.router}\n          replace={option.replace}\n          separator={separator}\n          maxItemWidth={maxItemWidth}\n        >\n          {option.content || option.children}\n        </BreadcrumbItem>\n      ));\n    }\n\n    return (\n      <BreadcrumbContext.Provider\n        value={{\n          maxItemWidthInContext: maxItemWidth,\n          theme,\n        }}\n      >\n        <div ref={ref} className={`${classPrefix}-breadcrumb`} {...restProps}>\n          {content}\n        </div>\n      </BreadcrumbContext.Provider>\n    );\n  },\n  { BreadcrumbItem },\n);\n\nBreadcrumb.displayName = 'Breadcrumb';\n\nexport default Breadcrumb;\n","import _Breadcrumb from './Breadcrumb';\n\nimport './style/index.js';\n\nexport type { BreadcrumbProps, BreadcrumbItemProps } from './BreadcrumbProps';\nexport * from './type';\n\nexport const Breadcrumb = _Breadcrumb;\nexport default Breadcrumb;\n"],"names":["request","options","axios","apiUserLogin","data","method","url","params","apiSysConfig","apiTraceServer","apiTraceList","apiDeleteTrace","id","apiFenceList","apiDeleteFence","fenceId","apiTerminal","apiDeleteTerminalld","config","token","getToken","headers","Authorization","error","Promise","reject","response","status","removeToken","window","location","href","MessagePlugin","msg","Error","resolve","message","nodata","className","src","imgUrl","width","height","alt","element","SearchIcon","forwardRef","props","ref","createElement","IconBase","icon","displayName","Search","searchConf","useState","setParams","initValue","useEffect","forEach","el","key","value","undefined","map","item","index","label","I","placeholder","type","onEnter","callback","onChange","par","setValue","name","size","onClick","BreadcrumbItem","Breadcrumb","terminalPage","setTerminalPage","terminalPageSize","setTerminalPageSize","terminalData","setTerminalData","terminalTotal","setTerminalTotal","visible","setVisible","deleteDish","setDeleteDish","provider","searchValue","setSearchValue","searchHandle","getData","items","serverId","match","page","pageSize","terminalName","terminalId","then","res","code","total","searchVal","maxItemWidth","theme","length","columns","align","ellipsis","colKey","title","cell","row","moment","created","format","updated","fixed","record","rowKey","verticalAlign","bordered","hover","pagination","defaultCurrent","defaultPageSize","showJumper","pageInfo","current","header","style","color","footer","variant","onClose","BreadcrumbContext","createContext","maxItemWidthInContext","children","separator","React","ChevronRightIcon","disabled","maxWidth","to","target","router","replace","restProps","useContext","classPrefix","useConfig","commonClassNames","useCommonClassName","breadcrumbItemClassNames","classNames","textWrapperClassName","textClassNames","STATUS","separatorClassName","linkClassName","maxWidthForItem","useMemo","textContent","itemContent","push","separatorContent","forwardRefWithStatics","content","option","_Breadcrumb"],"sourceRoot":""}